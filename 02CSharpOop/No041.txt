┏━┳━━━━━━━━━━━━━━━━━━━━━━━━━┳━┳━┳━┓
┃☆┃ C#プログラミングレッスン                         ┃＿┃□┃×┃
┣━┻━━━━━━━━━━━━━━━━━━━━━━━━━┻━┻━┻━┫
┃値型と参照型                                               No.041 ┃
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

■──────────────────────────────────
■ 値型、参照型とは

前回、構造体の説明をしたときに、構造体は値型でありクラスは参照型である
と書きましたが、C#の全てのデータは、値型か参照型どちらかに分類されます。

いくつか例を以下に示します。

○値型
  組み込みの数値型 int, double, decimal, char
  bool 型
  構造体

○参照型
  string
  配列
  クラス

それぞれの特徴は以下の通りです。

○値型の特徴

 ・変数を宣言すると、値そのものが格納される領域が用意される。 
 ・引数に渡される場合は、値の複製が作られ、その複製が渡される。
 ・代入する時は、値そのものが代入される。
 ・継承ができない。

   int a = 10; の場合
   ┌──┐
   │ 10 │
   └──┘
   
○参照型の特徴

 ・変数を宣言すると、オブジェクトへの参照が格納される領域が用意される。
 ・引数に渡される場合は、インスタンスへの参照が渡される。
 ・代入する場合は、インスタンスの参照が代入される。
 ・原則として継承できる。

  string s = "C# world"; の場合
   ┌──┐  ┌────┐
   │  ─┼→│C# world│
   └──┘  └────┘
  

■──────────────────────────────────
■ 値型と参照型の違い

では、値型と参照型の違いを以下のコードで見てみましょう。

   int x = 10
   int y = x;
   x = 20;
   Console.WriteLine(y);

この結果は、10 となります。当たり前ですよね。

では、以下のコードはどうでしょうか。

   class MyClass {
     public int x;
   }
   ...
   MyClass mc = new MyClass();
   mc.x = 10;
   MyClass mc2 = mc;
   mc.x = 20;
   Console.WriteLine(mc2.x);

答えは、10ではなく、20となります。これと同様のコードは前回にも示しまし
たが、これは、とても重要ですので、是非理解してくださいね。
mc と mc2 は、 同じインスタンスへの参照を保持していますので、mc.x の値
を変更するということは、mc2.x を変更することと同じになります。

これが理解できれば、値型をメソッドの引数に渡した時と、参照型を引数に渡
したときの動きの違いも理解できるでしょう。

   void Foo(MyData obj) {
     obj.x = 123;
   }

   といメソッドがあった時に、

   MyData obj = new MyClass();
   obj.x = 10;
   Foo(obj);
   Console.WriteLine(obj.x);

では、何が表示されるでしょうか。
答えは、
   MyData が class の時には、123 が表示され、MyData が struct の場合に
   は、10 が表示される。
です。

┌─┬─────────────────────────┬─┬─┬─┐
│☆│ C#プログラミングレッスン  (ぼぼ週刊）            │＿│□│×│
├─┴─────────────────────────┴─┴─┴─┤
│ Published by Gushwell  (Microsoft MVP for Visual C#)             │
│ Copyright (C) 2004-2005 Gushwell All rights reserved.            │
│-------------------- Gushwell's Page ---------------------------- │
│ 窓際プログラマーの独り言  ：http://blog.livedoor.jp/gushwell/    │
│ 窓際プログラマーの読書三昧：http://gushwell.jugem.jp/            │
│             よろしかったらアクセスしてみてください！             │
└─────────────────────────────────┘
