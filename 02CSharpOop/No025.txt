┏━┳━━━━━━━━━━━━━━━━━━━━━━━━━┳━┳━┳━┓
┃☆┃ C#プログラミングレッスン                         ┃＿┃□┃×┃
┣━┻━━━━━━━━━━━━━━━━━━━━━━━━━┻━┻━┻━┫
┃プロパティ （２）                                          No.025 ┃
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

まずは、前回のソースコードに誤りがありましたので、お詫びして訂正いたし
ます。

（誤）
     public string Format() {
         result := string.Format("{0}年{1}月{2}日",
                                  year,month,day);
     }
（正）
     public string Format() {
         return string.Format("{0}年{1}月{2}日",
                                  year,month,day);
     }

さて、今回は前回に引き続きプロパティのお話です。

■──────────────────────────────────
■ set アクセッサ

Year,Month,Dayプロパティは、読み込み専用であり、

   date.Year = 2005;

と代入することができませんが、 setアクサセを定義することで、読み書き可
能なプロパティにすることもできます。書き込み可にするには、setアクセサ
を定義します。

     public int Year {
         get { return year; }
         set { year = value; }
     }

setアクセサ内では、 特殊な value 変数を使用できます。この value には書
き込みする値が入っています。
つまり、

  date.Year = 2005;

と書くと、 2005 という右辺の値が、value に格納されます。この valueを使
い、 自分自身の year フィールドに値を設定しています。setアクセサでは、
値をセットするだけですので、return 文は必要ありません。

  ちなみに、MyDateクラスにおいては、Year,Month,Dayプロパティは、読み込
  み専用プロパティとしておいた方が無難だと個人的には思います。その理由
  は後述します。

面白いことに、 getアクセサとsetアクサセを定義すると、++, --, +=, -= 演
算子などが使用できるようになります。

  date.Year++;

とすれば、Yearを1年後にセットできます。


■──────────────────────────────────
■ 書き込み専用プロパティ

setアクセサだけを定義すると書き込み専用のプロパティを定義することも可
能です。

     public int Year {
         set { year = value; }
     }

これで、書き込み専用のプロパティ（代入できるけど、参照できないプロパテ
ィ）になります。
ただ、書き込み専用プロパティを作ることは、それほどないと思われます。


■──────────────────────────────────
■ Year, Month, Dayプロパティが読み込み専用の理由

Year, Month, Dayプロパティが、読み込み専用のプロパティの方が無難である、
ということを書きましたが、僕がなぜそう思うのかちょっと説明したいと思い
ます。

例えば、Year, Month, Dayプロパティが、読み書き可のプロパティだとしまし
ょう。
そうすると、以下のようなコードを書くことができます。

  date.Year = 2005;
  date.Month = 1;
  date.Day = 31;

その後に、2月29日に変更するコードを書いたらどうなるでしょうか。

  date.Month = 2;     ... (1)
  date.Day = 29;
  date.Year = 2005;

(1) を実行した直後は、dateの中身は（2005年2月31日）になっています。明
らかにおかしなデータです。しかし、この時点で、エラーとすることはできま
せん。なぜなら、その後に、正しい日をセットしているのですから。結局、年
月日をバラバラにセットできるようにすると、エラーとするタイミングがなく、
MyDateクラス内の整合性を保つことが出来なくなってしまいます。

こういった理由から、Year,Month,Dayの各プロパティは、読み込み専用のプロ
パティとすることが望ましいと言えます。

┌─┬─────────────────────────┬─┬─┬─┐
│☆│ C#プログラミングレッスン                         │＿│□│×│
├─┴─────────────────────────┴─┴─┴─┤
│ Published by GushWell                                            │
│ Copyright (C) 2004-2005 GushWell All rights reserved.            │
│-------------------- GushWell's Page ---------------------------- │
│ 窓際プログラマーの独り言  ：http://blog.livedoor.jp/gushwell/    │
│ 窓際プログラマーの読書三昧：http://gushwell.jugem.jp/            │
│             よろしかったらアクセスしてみてください！             │
└─────────────────────────────────┘

