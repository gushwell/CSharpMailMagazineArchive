┏━┳━━━━━━━━━━━━━━━━━━━━━━━━━┳━┳━┳━┓
┃☆┃ C#プログラミングレッスン                         ┃＿┃□┃×┃
┣━┻━━━━━━━━━━━━━━━━━━━━━━━━━┻━┻━┻━┫
┃ディレクトリの操作 (1)  DirectoryInfo,Directory             No.107┃
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

今回は、DirectoryInfoクラスとDirectoryクラスの説明です。ディレクトリの
作成、削除、および列挙などの操作が可能です。
この２つのクラスは、System.IO名前空間に属しています。

■──────────────────────────────────
■ ディレクトリを作成する

  
  DirectoryInfo di = Directory.CreateDirectory(@"C:\Gushwell");

ディレクトリを作成するには、Directoryクラスの静的メソッド
CreateDirectory を使います。  

戻り値は、作成されたディレクトリの情報を示す DirectoryInfoのインスタン
スが返ります。

すでに指定したディレクトリが存在する場合は、何もせずに、そのディレクト
リのDirectoryInfoが返ります。
アクセス権がなかったり、無効なパス名を指定した場合は、例外が発生します。

このメソッドの便利なところは、C:\Gushwellというディレクトリが存在しな
くても、

  DirectoryInfo di = Directory.CreateDirectory(@"C:\Gushwell\temp");

とすれば、Gushwellディレクトリを作成後、tempサブディレクトリを作成して
くれることです。


■──────────────────────────────────
■ サブディレクトリを作成する

DirectoryInfoのインスタンスが生成されているときには、Directoryクラスの
CreateDirectoryメソッドでは、DirectoryInfoのCreateSubdirectory メソッ
ドを利用することもできます。

  DirectoryInfo di = Directory.CreateDirectory(@"C:\Gushwell");
  DirectoryInfo sdi = di.CreateSubdirectory("temp");

とすれば、Gushwellディレクトリの下に、tempディレクトリが作成されます。


■──────────────────────────────────
■ ディレクトリを削除する

ディレクトリを削除するには、Deleteメソッドを使います。

  DirectoryInfo di = new DirectoryInfo(@"C:\Gushwell\temp");
  di.Delete();

指定したディレクトリが空でない場合には、削除することはできません。

なお、DirectoryInfo のインスタンスを生成するには、上記のように存在する
ディレクトリを引数に指定し、コンストラクタを呼び出します。存在しないデ
ィレクトリを指定し newした場合には、例外が発生します。


■──────────────────────────────────
■ ディレクトリを移動する

移動するには、MoveToメソッドを使います。

  DirectoryInfo di = new DirectoryInfo(@"C:\Gushwell\temp");
  di.MoveTo(@"C:\MyTemp");

この例では、tempディレクトリとその配下のファイル（ディレクトリ）を
C:\MyTemp に移動します。MyTempの下に、tempディレクトリが出来るのではな
く、tempという名前が、MyTempという名前に変更されます。


■──────────────────────────────────
■ ディレクトリ名を変更する

ディレクトリの名前を変えるには、MoveToメソッドを使います。Renameという
メソッドが存在しないので、注意してください。

  DirectoryInfo di = new DirectoryInfo(@"C:\Gushwell\temp");
  di.MoveTo(@"C:\Gushwell\save");

ここで注意しなければならないのは、上記のように、移動先のディレクトリを
移動元と同じにすることです。
もし、

  DirectoryInfo di = new DirectoryInfo(@"C:\Gushwell\temp");
  di.MoveTo("save");

と書いてしまうと、カレントディレクトリに「移動」してしまいますので注意
してください。


■──────────────────────────────────
■ ディレクトリの存在有無を調べる

ディレクトリの存在有無を調べるには、Existsメソッドを使います。

  if ( Directory.Exists(@"C:\Gushwell") ) {
      Console.WriteLine("存在しています");
  } else {
      Console.WriteLine("存在していません");
  }

DirectoryInfoにもExistsメソッドがありますが、これは、生成されているイ
ンスタンスの存在有無を調べるものなので、それほど使う頻度は少ないと思い
ます。

┌─┬─────────────────────────┬─┬─┬─┐
│☆│ C#プログラミングレッスン  (ぼぼ週刊）            │＿│□│×│
├─┴─────────────────────────┴─┴─┴─┤
│ Published by Gushwell.                                           │
│ Copyright (C) 2004-2006 Gushwell All rights reserved.            │
│ Microsoft MVP Visual Developer - Visual C#(Apr 2006 - Mar 2007)  │
│-------------------- Gushwell's Page ---------------------------- │
│ 窓際プログラマーの独り言  ：http://blog.livedoor.jp/gushwell/    │
│ 窓際プログラマーの読書三昧：http://gushwell.jugem.jp/            │
│ C#デザインパターン :                                             │
│  『増補改訂版Java言語で学ぶデザインパターン入門 / 結城 浩(著)』  │
│   のサンプルコードをC#に移植したものを掲載しています。           │
│   移植後のコードの公開は、結城氏の了解を得ています。             │
│   http://blog.livedoor.jp/gushwell/archives/50333227.html        │
└─────────────────────────────────┘
 