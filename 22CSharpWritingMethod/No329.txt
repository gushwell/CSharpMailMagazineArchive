■━ [C#プログラミングレッスン] ━━━━━━━━━━━━━━━ No.329 ━□

「プログラム書法編」-- コメント(2)
                                                           by Gushwell  
□━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━■


■□───────────────────────────────────
■□ 理解の手助けとなるコメントを書く

前回は、わかりやすいコードを書いたほうが良いと書きましたが、そうはいっても、
複雑なアルゴリズムを採用した場合は、コードをわかりやすくするのにも限界があ
ります。そんな時には、理解の手助けとなるようなコメントを残しましょう。

例えば、そのアルゴリズムの出典のURLや書籍の参照ページなどをコメントに残して
おけば、後から読む人の助けになります。

また、以下のようなコードは、何を求めているのかがすぐにはわかりません。

Point left = points
    .Where(p => p.X == points.Min(p2 => p2.X))
    .First();

そのため、

// 最も左側にある点の位置を一つだけ求める。

というコメントを付加しておけば、後で読んだときに、コードを読む助けとなりま
す。
ここで、重要なのは、「何をするのか」をコメントに残すということです。
「どうやるか」が細かく書かれているコメントは、実装詳細が変更された時には、
まったく役に立たなくなってしまいます。

また、「なぜそうするのか」ということもコメントとしては有効です。

 // WriteableBitmapは、UIスレッドで描画する必要があるため、
 // Dispatcher.BeginInvokeを利用
 this._image.Dispatcher.BeginInvoke(() => {
     _image.Pixels[(int)pt.Y * this._width + (int)pt.X] = intcolor;
     _image.Invalidate();
 });

あるいは、利用しているコンポーネントのバグを回避するために記述したコードな
らば、そのことをコメントに残しておくことが重要です。コードからは読み取れな
い情報ですからね。


■□───────────────────────────────────
■□ コードをコメントアウトしたままにしない

時々、

/* 
  ここからここまで削除
  this._image.Dispatcher.BeginInvoke(() => {
      _image.Pixels[(int)pt.Y * this._width + (int)pt.X] = intcolor;
      _image.Invalidate();
  });
*/

のように、コードをそのままコメントアウトして残しているものを見ることがあり
ます。こういっったコメントは読み手の理解をミスリードする危険があります。ご
丁寧にも、削除した日付を書いている場合もありますが、まったく意味がありませ
ん。
今は、ソースコード管理ツールを使えば、プログラムの変更履歴を管理できますの
で、さっさと削除してしまい、コードを読みやすくしましょう。


■□───────────────────────────────────
■□ XMLコメント

C#では、/// で始まるコメントからXMLドキュメントを生成することができます。
ここでは詳細は省略しますが、Sandcastleなどのツールを使うことで、
このXMLドキュメントから、ヘルプファイルを自動生成させることができます。

XMLコメントのサンプルを示します。

   /// <summary>
   /// ユーザー コントロール内のコンテンツを取得または設定します。
   /// </summary>
   /// <value>
   /// ユーザー コントロールのコンテンツ。</value>
   public UIElement Content { get; set; }

XMLタグにつては、以下のURLをご覧ください。
ドキュメント コメント用の推奨タグ (C# プログラミング ガイド)
http://msdn.microsoft.com/ja-jp/library/5ast78ax.aspx


─────────────────────────────────────
『C#プログラミングレッスン』  (ほぼ週刊）                                 
☆皆さまからの感想をお待ちしています。http://gushwell.ifdef.jp/mail.html  
─────────────────────────────────────
Published by Gushwell.                                                    
 Copyright (C) 2012 Gushwell All rights reserved.                        
 Microsoft MVP for Visual C#(Apr 2005 - Mar 2013)                        

■Gushwell's Page                                                         
facebook Page                     : http://www.facebook.com/CSharpLesson  
Gushwell's C# Dev Notes           : http://gushwell.ldblog.jp/            
Gushwell's C# Programming Page    : http://gushwell.ifdef.jp/             
Gushwellの読書ノート              : http://gushwell.jugem.jp/             
Twitterアカウント                 : @gushwell                             
─────────────────────────────────────
