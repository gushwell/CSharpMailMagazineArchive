
■━ [C#プログラミングレッスン] ━━━━━━━━━━━━━━━ No.326 ━□

「プログラム書法編」-- スタイル(1)
                                                           by Gushwell  
□━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━■

読者のみなさん、こんにちは。
この４月に おかげさまでMicrosoft MVP for C# を8年連続で受賞することができ
ました。これからの一年MVPの名に恥じぬよう頑張っていこうと思います。

約１か月お休みをいただいていましたが、今週からC#プログラミングレッスンを再
開したいと思います。「プログラム書法編」の始まりです。
実は、どんな内容になるか全体像をまとめあげていないので、自分自身でもどんな
内容になるのか、何回くらい続くのかが予想できませんが、少しでも皆さんの役に
立つ内容になればと思います。

今日のお題は、コードのスタイルについてです。

■□───────────────────────────────────
■□ 構造をインデントに反映させよう

プログラミング初心者は、インデントの大切さが理解できていない人がいるようで
す。実際に僕もその一人でした。その時の言語は、FORTRANでしたが、文法的に正し
くて、コンピュータが理解できればインデントする必要ないんじゃないのと思った
ものです。
プログラムコードは、「人（他の人）が読むものだ」という理解がなかったのです
ね。
C#でのインデントは、人が読むためのものであり、プログラムの構造を反映させた
ものだということを理解できれば、何も難しいことはありません。

以下はレシピ編No313で示したコードの改行とインデントをひどい状態にしたもので
す。

StringBuilder sb = new StringBuilder(); Random rnd = new Random();
    for (int i = 0; i < 1000; i++)
{ char c = (char)('A' + rnd.Next(0, 23));
sb.Append(c); } Console.WriteLine(sb.ToString());

これを次のように書けば、コードをより速く理解できるようになります。

StringBuilder sb = new StringBuilder(); 
Random rnd = new Random();
for (int i = 0; i < 1000; i++) {
    char c = (char)('A' + rnd.Next(0, 23));
    sb.Append(c); 
} 
Console.WriteLine(sb.ToString());

※C#プログラミングレッスンでは、「{ は行末に記述する」というルールを採用し
 てます。これは、C#で一般的な「行頭へ記述する」というルールとは異なります
 が、私は、「{ は行末に記述する」ほうが、プログラムの構造が反映されている
 スタイルだと考えています。異論はあろうかと思いますが、スタイル編において
 もこのスタイルを採用させていただきます。

最初に挙げた例は、あまりにも極端でひどい例ですが、次のようなコードは時々見
かけます。

    if (source1.Count != source2.Count) {
        return false;
    }
        for (int i = 0; i < source1.Count; i++) {
            if (source1[i] != source2[i])
            return false;
        }
    return true;

ソースコードをいろいろといじっているうちに、インデントが崩れてしまったのだ
と思われますが、Visual Studioでは、コードを整形してくれる機能がありますので、
それを有効に活用すれば、インデントで悩む必要はなくなります。
整形したい部分を選択し、Ctrl+C , Ctrl+V とタイプすれば、コードを整形してく
れます。

■□───────────────────────────────────
■□ かっこを使ってわかりやすくしよう

かっこが本来必要ないところであっても、かっこを使うことでコードをわかりやす
くしてくれます。

if (year % 4 == 0 && year % 100 != 0 || year % 400 == 0)

上のコードはかっこがないため優先順位がわかりにくいです。
次のようにかっこを使えば、意味を理解しやすくなります。

if (((year % 4 == 0) && (year % 100 != 0)) || (year % 400 == 0))


==========================================================================

参考文献
『プログラミング作法』 Brian W.Kernighan アスキー (2000/11)
 http://amzn.to/HckjBO
『Code Complete第2版〈上〉』日経BPソフトプレス (2005/03)
 http://amzn.to/H5tPXD
『MSDN ライブラリ - クラスライブラリ開発のデザイン ガイドライン』 
 http://msdn.microsoft.com/ja-jp/library/ms229042.aspx


==========================================================================
■ Gushwellの書籍

『C#プログラミング入門』
http://www.amazon.co.jp/exec/obidos/ASIN/4777515982/gaius-22/

目次は、こちらで確認できます。
http://www.kohgakusha.co.jp/books/detail/978-4-7775-1598-1


─────────────────────────────────────
『C#プログラミングレッスン』  (ほぼ週刊）                                 
☆皆さまからの感想をお待ちしています。http://gushwell.ifdef.jp/mail.html  
─────────────────────────────────────
Published by Gushwell.                                                    
 Copyright (C) 2012 Gushwell All rights reserved.                        
 Microsoft MVP for Visual C#(Apr 2005 - Mar 2013)                        

■Gushwell's Page                                                         
facebook Page                     : http://www.facebook.com/CSharpLesson  
Gushwell's C# Dev Notes           : http://gushwell.ldblog.jp/            
Gushwell's C# Programming Page    : http://gushwell.ifdef.jp/             
Gushwellの読書ノート              : http://gushwell.jugem.jp/             
Twitterアカウント                 : @gushwell                             
─────────────────────────────────────


