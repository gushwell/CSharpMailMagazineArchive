■━ [C#プログラミングレッスン] ━━━━━━━━━━━━━━━ No.332 ━□

「プログラム書法編」-- ネーミング(3)
                                                           by Gushwell  
□━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━■

今回もネーミングに関する指針について説明します。

■□───────────────────────────────────
■□ flagという名前

ある状態を表す際に、flagという単語が使われることがあります。しかし、これは
可能な限り別の名前にした方が良いです。
printFlag, fontFlag , logonFlag はあまりにも漠然としています。
例えば、reportType、fontStyle, isLogon などのほうが理解の助けになります。同
様に、switch, kubun などの変数名も使わない方がよい名前です。


■□───────────────────────────────────
■□ メソッド名は動詞または動詞句を

メソッド名は、メソッド名には、動詞または動詞句を割り当ててください。
通常は、何をするかを表す単語を使います。
そうすることで、開発者はメソッドの機能がより理解しやすくなります。
例えば、以下のような名前です。

Start, FindChild、GetCurrentStatus, RemoveAt, WriteChildren

なお、Documentクラスに対して、OpenDocument, CloseDocumwentは冗長です。Open,
Close だけでOKです。

動詞を省略する場合もあります。

ToStringやIndexOf, FromFileTime,

などです。それぞれ、以下の名前の動詞が省略されたものです。

ConvertToString, GetIndexOf, CreateFromFileTime,

また、boolを返すメソッドでは、IsLeapYear と 変数名と同様 Is で始める場合も
あります。


■□───────────────────────────────────
■□ メソッド名にあいまいな動詞を使いません。

以下のメソッド名はあまり良いメソッドとは言えません。

PerformWork, OutputData, chackName

あまりにも漠然とした名前で、メソッドが何をするのかを示していません。


■□───────────────────────────────────
■□ 実装詳細を示すような名前を付けないようにします。

また、実装詳細を示すような名前も付けないようにします。
アプリケーションでユーザが設定したオプションデータを保存するのに、
WriteRegistory とか UpdateIniFile という名前は実装詳細を示しています。
単に、SaveSettings あるいは、Settings クラスのメソッドならば、単に Save と
するのが適当です。


■□───────────────────────────────────
■□ その他の識別子のネーミング

クラス名、構造体、インターフェースの名前は、名詞、名詞句を使います。なお、
インターフェース名には、 I というプリフィックスを付加します。

IEnumerable、IList など

また、Microsoftでは、クラス名に付加するサフィックスのガイドラインを定めてい
ます。
いくつかピックアップして示します。

・例外クラスは、必ず、Exception サフィックスを付けます。
・カスタム属性クラスには、サフィックス Attribute を追加します。
・イベントで使用する型 (C# のイベントの戻り値の型など) の名前には、サフィッ
 クス EventHandler を追加します。
・System.EventArgs を拡張するクラスには、サフィックス EventArgs を追加しま
 す。イベント ハンドラーではないデリゲートの名前には、サフィックス
 Callback を追加します。

─────────────────────────────────────
『C#プログラミングレッスン』  (ほぼ週刊）                                 
☆皆さまからの感想をお待ちしています。http://gushwell.ifdef.jp/mail.html  
─────────────────────────────────────
Published by Gushwell.                                                    
 Copyright (C) 2012 Gushwell All rights reserved.                        
 Microsoft MVP for Visual C#(Apr 2005 - Mar 2013)                        

■Gushwell's Page                                                         
facebook Page                     : http://www.facebook.com/CSharpLesson  
Gushwell's C# Dev Notes           : http://gushwell.ldblog.jp/            
Gushwell's C# Programming Page    : http://gushwell.ifdef.jp/             
Gushwellの読書ノート              : http://gushwell.jugem.jp/             
Twitterアカウント                 : @gushwell                             
─────────────────────────────────────
