■━ [C#プログラミングレッスン] ━━━━━━━━━━━━━━━ No.334 ━□

「プログラム書法編」-- マジックナンバー
                                                           by Gushwell  
□━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━■

■□───────────────────────────────────
■□ マジックナンバーは使わない

マジックナンバーとは、プログラムコードの中にあらわれる、125 や 16 といった
作成したプログラマーにしかわからない数値リテラルのことです。

if (count >= 5)
   ...

というコードの5というのが何を意味するのかは、コードからはなかなか読み取れま
せん。
特に、5 という数値があちこちに出てきたら、そして、別の目的として利用してい
る 5 というマジックナンバーがでてきたら、プログラムの修正は非常に面倒なこと
になります。

if (count >= MaxRetryCount)

ならば、何をやっているかがコードから読み取ることが可能ですし、5 を 3 に変更
する場合も簡単に修正が行えます。

マジックナンバーを避ける手段としては、以下の３つが考えられます。

1) const を利用する

   private const int MaxRetryCount = 5;

2) readonly を利用する

   private readonly int MaxRetryCount = 5;

3) ReadOnlyのプロパティを利用する

   private int MaxRetryCount {
       get { return 5; }
   }


どれが良いかの優劣をつけることは難しいですが、私は、最近は、プロパティを使
う場面が多いです。

MaxRetryCountの値は、通常システムの要件によって変わる可能性があります。こう
いった値は、constではなく、readonlyやプロパティとして定義する方が良いと思い
ます。

システム要件に左右されない（つまり変更される可能性がほとんどない）数値リテ
ラルならば、const を使います。
Math.PIやint.MaxValueがその代表例ですね。
しかし、変更される可能性がほとんどない数値リテラルというのは、意外と少ない
ものです。

※ 今回は短くてごめんなさい m(_ _)m
  このところ忙しくて、メルマガやブログ記事を書いている時間がなかなか取れま
  せん(T T)

─────────────────────────────────────
『C#プログラミングレッスン』  (ほぼ週刊）                                 
☆皆さまからの感想をお待ちしています。http://gushwell.ifdef.jp/mail.html  
─────────────────────────────────────
Published by Gushwell.                                                    
 Copyright (C) 2012 Gushwell All rights reserved.                        
 Microsoft MVP for Visual C#(Apr 2005 - Mar 2013)                        

■Gushwell's Page                                                         
facebook Page                     : http://www.facebook.com/CSharpLesson  
Gushwell's C# Dev Notes           : http://gushwell.ldblog.jp/            
Gushwell's C# Programming Page    : http://gushwell.ifdef.jp/             
Gushwellの読書ノート              : http://gushwell.jugem.jp/             
Twitterアカウント                 : @gushwell                             
─────────────────────────────────────
