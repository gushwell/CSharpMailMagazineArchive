■━ [C#プログラミングレッスン] ━━━━━━━━━━━━━━━ No.333 ━□

「プログラム書法編」-- 変数利用のガイドライン
                                                           by Gushwell  
□━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━■

みなさん、おはようございます。
梅雨の季節到来ですね。雨の日は出かけるずに、家で過ごす時間が多くなると思い
ますが、そんな時は、当メールマガジンのバックナンバーでも読んで、有意義な時
間(笑)を過ごしていただけたらと思います.
さて、今回は、変数に関するガイドラインです。

■□───────────────────────────────────
■□ 変数は、宣言した時に初期化しておく。

変数の初期化をしなかったために、プログラムにがおかしな挙動をするという経験
は多くのプログラマがしていると思います。
この初期化問題に対処するには、宣言時に初期化することを徹底することです。

幸い、C#では、初期化しないまま、変数を使用しようとすると、コンパイルエラー
となりますので、初期化を忘れる心配はありませんが、それでも、宣言と初期化を
一緒にすることはとても良いことです。

宣言と初期化の位置が離れていると、そのプログラムの読み手は、いつどこで変数
が初期化されるのかを注意深く読み解かなくてはなりません。


■□───────────────────────────────────
■□ 変数は最初に利用される場所の近くで宣言・初期化します。

変数の宣言をメソッドの先頭にまとめて書く人がいますが、それは良い書き方とは
言えません。プログラムの理解を妨げることになりますし、バグを混入させる危険
を高めることになります。

メソッドの先頭で変数が宣言されていると、メソッドの一部分でしか利用しない変
数であっても、メソッド全体で利用される変数だという認識でコードを読まなくて
はなりません。
また、修正を繰り返されることで、想定していた初期値とは別の値を設定するコー
ドを挿入されてしまう可能性もあります。

宣言と利用する場所が近ければ、リファクタリング時にメソッドとして抽出するこ
とも楽に行えます。


■□───────────────────────────────────
■□ スコープは狭く

上記「変数は最初に利用される場所の近くで宣言・初期化します」とも関連します
が、変数のスコープはできるだけ狭くします。
例えば、forループの中だけで利用する変数は、for ループの外ではなく、forルー
プの中で宣言します。

スコープが狭くなれば、一度に注意しておくべき事項が減り、理解の助けになりま
すし、プログラムの変更時に間違いを犯す可能性も減少します。

この考え方は、クラスのフィールド（メンバー変数）にも適用されます。つまり、
変数をどこで宣言するかは、

ブロック内のローカル変数 → メソッドのローカル変数 -> private 変数 
→ protected変数 

という順で、広げていくようにします。

protected変数の先には、public変数があるわけですが、public変数は使わないのが
原則です。この場合、プロパティを定義することになります。

─────────────────────────────────────
『C#プログラミングレッスン』  (ほぼ週刊）                                 
☆皆さまからの感想をお待ちしています。http://gushwell.ifdef.jp/mail.html  
─────────────────────────────────────
Published by Gushwell.                                                    
 Copyright (C) 2012 Gushwell All rights reserved.                        
 Microsoft MVP for Visual C#(Apr 2005 - Mar 2013)                        

■Gushwell's Page                                                         
facebook Page                     : http://www.facebook.com/CSharpLesson  
Gushwell's C# Dev Notes           : http://gushwell.ldblog.jp/            
Gushwell's C# Programming Page    : http://gushwell.ifdef.jp/             
Gushwellの読書ノート              : http://gushwell.jugem.jp/             
Twitterアカウント                 : @gushwell                             
─────────────────────────────────────
