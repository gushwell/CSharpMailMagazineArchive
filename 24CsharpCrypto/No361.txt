■━ [C#プログラミングレッスン] ━━━━━━━━━━━━━━━ No.361 ━□

「暗号化編」-- configファイルの暗号化
                                                           by Gushwell  
□━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━■


昨年１２月から続けてきた「暗号化編」ですが、今回が最後となりました。
最後の話題は、configファイルの暗号化です。

■□───────────────────────────────────
■□ configファイルの暗号化

Web.configの暗号化は、"Web.config 暗号化" で検索すれば、いろいろとヒット
しますので、そちらを参照してもらうとして、ここでは、app.configの暗号化に
ついて説明します。

.NETのConfigファイル（構成ファイル）を暗号化するには、
SectionInformation.ProtectSection メソッド を利用します。
以下にそのコードを示します。

 ExeConfigurationFileMap map = new ExeConfigurationFileMap();
 map.ExeConfigFilename = @"sample.config";
 Configuration configuration =
     ConfigurationManager.OpenMappedExeConfiguration(map, ConfigurationUserLevel.None);

 ConfigurationSection section = configuration.AppSettings; // ※
 section.SectionInformation.ProtectSection("RsaProtectedConfigurationProvider");
 section.SectionInformation.ForceSave = false;
 configuration.Save();

このコードでは、sample.configファイルのAppSettingsセクションを暗号化して
います。ConnectionStringsを暗号化するには、※ の部分を変更するだけです。

sample.configの暗号化前と後を示します。

●暗号化前

 <?xml version="1.0" encoding="utf-8" ?>
 <configuration>
   <appSettings>
     <add key="Hoge" value="hoge hoge hoge" />
     <add key="Moge" value="moge moge moge" />
     <add key="Mage" value="mage mage mage" />
     <add key="Fuga" value="fuga fuga fuga" />
   </appSettings>
   <system.net>
     <defaultProxy enabled="false" />
   </system.net>
 </configuration>

●暗号化後
 <?xml version="1.0" encoding="utf-8" ?>
 <configuration>
   <appSettings configProtectionProvider="RsaProtectedConfigurationProvider">
     <EncryptedData Type="http://www.w3.org/2001/04/xmlenc#Element"
       xmlns="http://www.w3.org/2001/04/xmlenc#">
       <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#tripledes-cbc" />
       <KeyInfo xmlns="http://www.w3.org/2000/09/xmldsig#">
         <EncryptedKey xmlns="http://www.w3.org/2001/04/xmlenc#">
           <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#rsa-1_5" />
           <KeyInfo xmlns="http://www.w3.org/2000/09/xmldsig#">
             <KeyName>Rsa Key</KeyName>
           </KeyInfo>
           <CipherData>
             <CipherValue>AfxR9YZQQxieoC9saxtcukUqPrZMp6cib6Wkk8pXb781njkDB2vM
kNlZX+MlzX6uJT/Nx121Bo2VY4CluWlicxgji+eRjlJcX4/xZO2Gm6UlCvLsDjRiX2sGEw2f7sxQPs
grKHQCHlJwqGEeuF/Z4/mZX/+dHDzr4k6DzHHiOiY=</CipherValue>
           </CipherData>
         </EncryptedKey>
       </KeyInfo>
       <CipherData>
         <CipherValue>QrrOqFi2s2tTOOA8AyfBCYS/0xgimI/lMjc081stFkqwfzZYpV1IgD/P
Sq/ZiyAKNVivkUw6ePwMAcB/8NtTKBTDQcafl5ozAThQFbD4Y8CWyKtOh1PMnNBMsuNgft6Q6llSpn
Vvz3gbQfG4WzW7XAaEF54u8LGVRawNBes1bDUbLd/RUVpVItVdtIaX9Kt0/aH+EY/fPMOTM2Aoo03P
n7Iadq1B++CWqytf4C1Sy/3tqHNqwUH2QEkkZevs1d4g7yZVWPkzDv0lHWzlRSLrvN9dQX9xPjEIyW
ngkXoIZGF0FSpig4Gnzw==</CipherValue>
       </CipherData>
     </EncryptedData>
   </appSettings>
   <system.net>
     <defaultProxy enabled="false" />
   </system.net>
 </configuration>


 ※ 記事の都合上、途中で改行しています。


この結果を、見ていただければお分かりになるとおり、appSettingsセクションだけ
が暗号化されており、他のセクションは暗号化されていません。

なお、この暗号化されたconfigファイルを読み込む際は、自動的に復号化されるの
で、特別なコーディングは不要です。何も考えずに普通に読み込むだけです。
以下、そのコードを示します。

 ExeConfigurationFileMap map = new ExeConfigurationFileMap();
 map.ExeConfigFilename = @"sample.config";
 Configuration configuration =
   ConfigurationManager.OpenMappedExeConfiguration(map, ConfigurationUserLevel.None);
 var s = configuration.AppSettings.Settings["Hoge"];
 Console.WriteLine(s.Value);
 s = configuration.AppSettings.Settings["Moge"];
 Console.WriteLine(s.Value);

このコードを実行すれば、暗号化前のデータが取得できているのが確認できるはず
です。

なお、注意しなければいけないのは、暗号化と復号化は同じコンピュータ上で行う
必要があるということです。
暗号化するには、キーコンテナへのアクセス権が必要となります。


--------------------------------------------------------------------------

さて、今回で暗号化編が終わりですが、まだ、次の話題が決まっていないので２，
３週間、充電期間をいただこうと思います。

─────────────────────────────────────
『C#プログラミングレッスン』  (ほぼ週刊）                                 
☆皆さまからの感想をお待ちしています。http://gushwell.ifdef.jp/mail.html  
─────────────────────────────────────
Published by Gushwell.                                                    
Copyright (C) 2013 Gushwell All rights reserved.                          
Microsoft MVP for Visual C#(Apr 2005 - Mar 2014)                          

■Gushwell's Page                                                         
facebook Page                     : http://www.facebook.com/CSharpLesson  
Gushwell's C# Dev Notes           : http://gushwell.ldblog.jp/            
Gushwell's C# Programming Page    : http://gushwell.ifdef.jp/             
Gushwellの読書ノート              : http://gushwell.jugem.jp/             
Twitterアカウント                 : @gushwell                             
─────────────────────────────────────
