■━ [C#プログラミングレッスン] ━━━━━━━━━━━━━━━ No.282 ━□
  
 「.NET Framework4 編」-- ディレクトリ、ファイルの列挙の強化
                                                             by Gushwell  
□━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━■


■□───────────────────────────────────
■□ ディレクトリ、ファイルの列挙の強化

.NET Framework 4 では、以下に示すIEnumerable<T>を返すメソッドが追加され、
ディレクトリやファイルの列挙を効率的に行えるようになりました。

 ディレクトリ名の列挙
   Directory.EnumerateDirectories     

 ディレクトリ情報 (DirectoryInfo)の列挙
   DirectoryInfo.EnumerateDirectories 

 ファイル名の列挙
   Directory.EnumerateFiles            

 ファイル情報 (FileInfo)の列挙
   DirectoryInfo.EnumerateFiles

 ファイル システム エントリの列挙
   Directory.EnumerateFileSystemEntries

 ファイル システム情報 (FileSystemInfo)の列挙
   DirectoryInfo.EnumerateFileSystemInfos

 テキストファイルの行の列挙
   File.ReadLines


以前のバージョンでは、これらの情報を配列としてしか取得できなかったため、多
くのファイルディレクトリを列挙する場合や、テキストファイル全体を読み込む場
合には、効率的ではありませんでした。
新しいメソッドを使うと、全体を取得するのではなく、必要な部分を順に列挙でき
るため、パフォーマンスの点で有利になります。

いくつかの例を示します。

■Directory.EnumerateDirectories
指定されたパスに存在するディレクトリ名を列挙する例

  foreach (string s in Directory.EnumerateDirectories("D:\\")) {
      Console.WriteLine(s);
  }

■DirectoryInfo.EnumerateDirectories
指定されたパスに存在するファイル名が 10文字以上のディレクトリを列挙する例

  var di = new DirectoryInfo("C:\\Windows");    
  foreach (var s in di.EnumerateDirectories().Where(d => d.Name.Length >= 10)) {
      Console.WriteLine("{0} {1} {2}",s.Name, s.CreationTime, s.Attributes);
  }

■Directory.EnumerateFiles
指定されたパス（サブディレクトリも含む）に存在するファイルで、拡張子が 
".exe" であるファイル名を列挙する例

  var files = Directory.EnumerateFiles("D:\\Users", "*.exe", 
                                       SearchOption.AllDirectories);
  foreach (string s in files) {
      Console.WriteLine(s);
  }


■DirectoryInfo.EnumerateFiles
指定されたパスに存在するファイルで、拡張子が ."exe" で、2010/1/1 以降に更
新されたファイルを列挙する例

  var q = from info in di.EnumerateFiles("*.exe")
          where info.LastWriteTime > new DateTime(2010,1,1)
          select info;
  foreach (var info in q)
      Console.WriteLine("{0} {1}", info.Name, info.LastWriteTime);


■DirectoryInfo.EnumerateFileSystemInfos
指定されたパスに存在するファイルで、ファイル名が Wで始まるファイル、ディ
レクトリを列挙する例

  var di = new DirectoryInfo("C:\\Windows");    
  foreach (var fi in di.EnumerateFileSystemInfos("W*")) {
      Console.WriteLine("{0} {1}",fi.Name, fi.Attributes);
  }


■File.ReadLines
指定したテキストファイルから "Microsoft" という文字列が存在する行を列挙す
る例

  var lines = from line in File.ReadLines("sample.txt")
              where line.Contains("Microsoft")
              select line;
  foreach (var line in lines) {
      Console.WriteLine(line);
  }


ここで示したように、LINQのクエリ構文との相性も良く、パフォーマンスを気に
することなく、より柔軟なコードが書けるようになります。

─────────────────────────────────────
『C#プログラミングレッスン』  (ぼぼ週刊）                                 
 ☆皆さまからの感想をお待ちしています。http://gushwell.ifdef.jp/mail.html 
─────────────────────────────────────
 Published by Gushwell.                                                   
   Copyright (C) 2011 Gushwell All rights reserved.                       
   Microsoft MVP for Visual C#(Apr 2005 - Mar 2011)                       
                                                                          
 ■Gushwell's Page                                                        
 Gushwell's C# Dev Notes           : http://gushwell.ldblog.jp/           
 Gushwell's C# Programming Page    : http://gushwell.ifdef.jp/            
 Gushwell's F# Programming Diary   : http://techbank.jp/gushwell/         
 Gushwellの読書ノート              : http://gushwell.jugem.jp/            
                                                                          
 ■コミュニティtechbank.jp (http://techbank.jp/)                          
 Gushwellが参加している技術系コミュニティです。                           
 有志メンバーによるBlogでの技術情報発信も行っています。                   
─────────────────────────────────────

