┏━┳━━━━━━━━━━━━━━━━━━━━━━━━━┳━┳━┳━┓
┃☆┃ C#プログラミングレッスン                         ┃＿┃□┃×┃
┣━┻━━━━━━━━━━━━━━━━━━━━━━━━━┻━┻━┻━┫
┃ C#3.0-Implicitly typed local variables                     No.154┃
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

■──────────────────────────────────
■ 暗黙的に型指定されたローカル変数

いままで、変数を宣言する際には、

 int i = 5;
 decimal d = 12.0M;
 string name = "坂本竜馬";
 DateTime dt = DateTime.Now;
 MyClassr mc = new MyClass();

というように、変数の前に型名を指定していましたが、C#3.0では、
ローカル変数に限り、

 var i = 5;
 var d = 12.0M;
 var name = "坂本竜馬";
 var dt = DateTime.Now;
 var mc = new MyClass();

と書くことができるようになりました。

注意してほしいのは、var は、var型という新たな型が追加されたわけはあり
ませんし、object型のような万能型ではないということです。コンパイラが型
を自動判定し、適切な型を割り当ててくれるわけです。

もちろん、配列についてもOKです。

 var nums = new int[] { 1,2,3,4,5 };

右辺を見れば、int[] であることが明白ですので、nums変数は、intの配列と
なります。

forearchや、forの中でも、

 foreach ( var n in nums ) {
     Console.WriteLine(n);
 }

 for ( var i = 0; i < nums.Length; i++ ) {
     Console.WriteLine(nums[i]);
 }

のように、varを使えます。

■──────────────────────────────────
■ 間違った例

 var x;              // 宣言のみはエラー。型を特定できない
 var x = null;       // nullは、許可されていない
 var x = { 1,2,3 };  // コレクション初期化子は許可されていない

という文は、コンパイルエラーとります。

それでは、次のコードはどうなるでしょうか。

 var list = new ArrayList();
 list.Add("abc");
 var str = list[0];

このコードはコンパイルエラーにはなりませんが、str変数は、string型では
なく、object型になります。

 var list = new List<string>();
 list.Add("abc");
 var str = list[0];

のように List<T>を使えば、str変数は、string型となります。

参考文献
『C#3.0の概要』
 http://www.microsoft.com/japan/msdn/net/bb308966.aspx

┌─┬─────────────────────────┬─┬─┬─┐
│☆│ C#プログラミングレッスン  (ぼぼ週刊）            │＿│□│×│
├─┴─────────────────────────┴─┴─┴─┤
│ Published by Gushwell.                                           │
│ Copyright (C) 2004-2007 Gushwell All rights reserved.            │
│ Microsoft MVP Visual Developer - Visual C#(Apr 2005 - Mar 2008)  │
│-------------------- Gushwell's Page ---------------------------- │
│ 窓際プログラマーの独り言  ：http://blog.livedoor.jp/gushwell/    │
│ 窓際プログラマーの読書三昧：http://gushwell.jugem.jp/            │
│ Gushwell's C# Programing Page：http://gushwell.ifdef.jp/         │
│ C#デザインパターン :                                             │
│  『増補改訂版Java言語で学ぶデザインパターン入門 / 結城 浩(著)』  │
│   のサンプルコードをC#に移植したものを掲載しています。           │
│   移植後のコードの公開は、結城氏の了解を得ています。             │
│   http://blog.livedoor.jp/gushwell/archives/50333227.html        │
└─────────────────────────────────┘
 
