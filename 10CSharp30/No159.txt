┏━┳━━━━━━━━━━━━━━━━━━━━━━━━━┳━┳━┳━┓
┃☆┃ C#プログラミングレッスン                         ┃＿┃□┃×┃
┣━┻━━━━━━━━━━━━━━━━━━━━━━━━━┻━┻━┻━┫
┃ C#3.0-拡張メソッド                                         No.159┃
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

■──────────────────────────────────
■ 拡張メソッドとは

Microsoft.VisualBasic名前空間には、Stringsというクラスがあります。
このStringsクラスの StrConvはなかなか面白いクラスなのですが、

 string s = Strings.StrConv(value, VbStrConv.TraditionalChinese, 1);

 ※このコードは、中国語の簡体字を繁体字に変換するコードです。

といった記述が必要であり、あまり使い勝手が良いとは言えません。

 string s = str.ToTraditionalChinese();

なんて書ければ、便利です。それを可能にしてくれるのが、拡張メソッドです。

以下のように記述します。

 using Microsoft.VisualBasic;
 ...
 public static class StringExtension {
     public static string ToTraditionalChinese(this string value) {
         return Strings.StrConv(value, VbStrConv.TraditionalChinese, 1);
     }
 }

このように書くことで、

 string s = str.ToTraditionalChinese();

とあたかも、インスタンスメソッドのように書くことが可能になります。

拡張メソッドを書くには、

・拡張メソッドは、staticメソッドとして宣言する。
・ジェネリッククラスには、宣言できない。
・拡張メソッドは、static クラス内で宣言する。
・第1引数には、this キーワードを付加する。

といった、約束事を守る必要があります。

■──────────────────────────────────
■ 拡張メソッドのサンプル

もう一つ、これもあまり実用的ではありませんが、拡張メソッドの例を載せま
しょう。

 public static class DateTimeExtension {
     public static string ToJapaniesDateString(this DateTime date, 
                                               string format) {
         System.Globalization.CultureInfo jp = 
                     new System.Globalization.CultureInfo("ja-JP");
         jp.DateTimeFormat.Calendar = 
                     new System.Globalization.JapaneseCalendar();
         if (format == null) {
             return date.ToString("ggyy年MM月dd日 dddd", jp);
         } else {
             return date.ToString(format, jp);
         }
     }
 }

この拡張メソッドを使うには、

 DateTime dt = DateTime.Now;
 Console.WriteLine(dt.ToJapaniesDateString(null));
 Console.WriteLine(dt.ToJapaniesDateString("yy.MM.dd"));

などと記述します。
結果は、

 平成20年01月24日 月曜日
 20.01.24

と表示されます。

┌─┬─────────────────────────┬─┬─┬─┐
│☆│ C#プログラミングレッスン  (ぼぼ週刊）            │＿│□│×│
├─┴─────────────────────────┴─┴─┴─┤
│ Published by Gushwell.                                           │
│ Copyright (C) 2004-2007 Gushwell All rights reserved.            │
│ Microsoft MVP Visual Developer - Visual C#(Apr 2005 - Mar 2008)  │
│-------------------- Gushwell's Page ---------------------------- │
│ 窓際プログラマーの独り言  ：http://blog.livedoor.jp/gushwell/    │
│ 窓際プログラマーの読書三昧：http://gushwell.jugem.jp/            │
│ Gushwell's C# Programing Page：http://gushwell.ifdef.jp/         │
│ C#デザインパターン :                                             │
│  『増補改訂版Java言語で学ぶデザインパターン入門 / 結城 浩(著)』  │
│   のサンプルコードをC#に移植したものを掲載しています。           │
│   移植後のコードの公開は、結城氏の了解を得ています。             │
│   http://blog.livedoor.jp/gushwell/archives/50333227.html        │
└─────────────────────────────────┘
 