
■━ [C#プログラミングレッスン] ━━━━━━━━━━━━━━━ No.291 ━□

 「正規表現編」-- Regexクラスの基礎
                                                            by Gushwell
□━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━■

前回に引き続き、正規表現の説明をしようとも思ったのですが、これは、C#のメ
ールマガジンなので、正規表現の説明はやめにして、Regexクラスの利用について
説明することにします。
※ 正規表現については、Regexの使い方と共にその都度説明していきます。

■□───────────────────────────────────
■□ Regexクラス

Regexクラスは、名前空間 System.Text.RegularExpressions に属しています。

 string text = "private List<string> results = new List<string>();";
 Regex rx = new Regex(@"List<\w+>");
 Match m = rx.Match(text);
 if (m.Success) {
    Console.WriteLine("Index={0}, Length={1}, Value={2}",
                       m.Index, m.Length, m.Value);
 }

 ※ using System.Text.RegularExpressions; が必要です。

このコードを動かすと、以下のような結果が得られます。

 Index=8, Length=12, Value=List<string>

それでは、Regexクラスについてその基本を説明します。

■Regexインスタンスの生成

コンストラクタの引数に、正規表現を与えることで、Regexのインスタンスを生成
できます。
一度生成した正規表現オブジェクト（Regexオブジェクト）は変更不可のオブジェ
クトとなります。

ここでは、正規表現文字列として

 @"List<\w+>"

を渡しています。@付きの文字列を使っています。@無しだと、

 "List<\\w+>"

と書かなくてはいけないため、読みにくくなってしまいます。

なお、\w は、単語に使用される任意の文字と一致します。単語に使用される任意
の文字として、[a-zA-Z_0-9] のほかに、全角のひらがな、カタカナ、漢字、英字、
数字、アンダースコア('_')  および半角カタカナが含まれます。'.' や '%' など
の記号は含まれません。

つまり、List<string> と一致することになります。これを

 @"List<\.+>"

と書いた場合は、Regexはできるだけ長い文字列と一致させようとしますので、

 List<string> results = new List<string>

と一致してしまうことになります。これを「最長一致」と読んでいますが、これに
ついては、また別の機会に再度取り上げたいと思います。

 ※ ドット(.) は、任意の文字を表します。


■Matchメソッド

Regexには、Macthメソッドがあります。このメソッドを使用し、最初に一致する
文字列を見つけることが出来ます。
Matchメソッドの引数には、対象となる文字列を与えます。
Match メソッドは、System.Text.RegularExpressions.Match 型のオブジェクトを
返します。


■Matchオブジェクト

Matchオブジェクトは、パターンに一致した部分文字列の情報を保持しています。
このコードで使用している、Matchオブジェクトのプロパティを以下に列挙します。


 Success  一致する文字列が検索できたかどうかを示しています。
         Trueならば、検索できたことを示します。
 Index    一致した部分文字列の先頭位置（検索対象の文字列内の位置)
 Length   一致した部分文字列の長さ
 Value    一致した部分文字列


■ IsMatchメソッド

一致したかどうかだけを知りたいときには、IsMatchメソッドを使います。

 string text = "private List<string> results = new List<string>();";
 Regex rx = new Regex(@"List<\w+>");
 bool isMatch = rx.IsMatch(text);
 if (isMatch) {
    Console.WriteLine("見つかりました");
 }


==========================================================================
■ Gushwellの書籍

『C#プログラミング入門』
 http://www.amazon.co.jp/exec/obidos/ASIN/4777515982/gaius-22/
 2415円

もし、ご興味がありましたら、本屋さんで手にとっていただければ幸いです。
※一時、amazonで在庫なしで取り扱い中止になっていましたが、取り扱いが再開さ
 れました。

─────────────────────────────────────
『C#プログラミングレッスン』  (ぼぼ週刊）
 ☆皆さまからの感想をお待ちしています。http://gushwell.ifdef.jp/mail.html
─────────────────────────────────────
 Published by Gushwell.
  Copyright (C) 2011 Gushwell All rights reserved.
  Microsoft MVP for Visual C#(Apr 2005 - Mar 2012)

 ■Gushwell's Page
 Gushwell's C# Dev Notes           : http://gushwell.ldblog.jp/
 Gushwell's C# Programming Page    : http://gushwell.ifdef.jp/
 Gushwell's F# Programming Diary   : http://techbank.jp/gushwell/
 Gushwellの読書ノート              : http://gushwell.jugem.jp/
─────────────────────────────────────

