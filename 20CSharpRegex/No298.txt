
■━ [C#プログラミングレッスン] ━━━━━━━━━━━━━━━ No.298 ━□

 「正規表現編」-- Regexで高度な置換処理
                                                            by Gushwell
□━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━■


■□───────────────────────────────────
■□ 簡単な置換処理

正規表現で力を発揮するのは、マッチング処理だけではありません。正規表現を
使った置換処理は、とても強力です。
String.Replaceでは実現できない柔軟性のある置換処理が出来ます。

まずは、簡単な例から。

 "WPF, WCF ,WF , Silverlight,ADO.NET,  LINQ"

上記文字列は ',' の前後の空白の数ガ揃っていないので、これを

 "WPF, WCF, WF, Silverlight, ADO.NET, LINQ"

と、カンマの後ろにひとつの空白を置くようにするコードを示します。

 string pattern = @"\s*,\s*";
 string text = "WPF, WCF ,WF , Silverlight,ADO.NET , LINQ";
 string s = Regex.Replace(text, pattern, ", ");
 Console.WriteLine(s);

Regex.Replaceメソッドは、指定した入力文字列内(第1引数)で、正規表現(第2引
数)に一致するすべての文字列を、指定した置換文字列(第3引数)で置換します。

正規表現 "\s*,\s*" の、\s* は０個以上の空白文字と一致しますので、","  ","
" ,"  " , " ... などに一致します。 これを Replaceメソッドで", " に置換し
ています。
String.Replaceでは、固定的な部分文字列としか一致させることができないので、
これを行うのは難しいですね。


■□───────────────────────────────────
■□ 部分文字列の削除

以下に示すのは、都道府県名が付加されている住所から、都道府県名を削除する
コードです。

 string pattern = @"(東京都|京都府|大阪府|北海道)|(.+[県])";
 string[] names = { "北海道札幌市", "青森県青森市",
  "東京都千代田区", "大阪府大阪市","京都府宇治市","京都府京都市",
  "栃木県宇都宮市" };
 foreach (string name in names) {
    string s = Regex.Replace(name, pattern, String.Empty);
    Console.WriteLine(s);
 }

Replaceメソッドは置換を行うメソッドですが、name の中の、patternに一致す
る部分文字列を String.Emptyに置き換えることで、削除処理をしています。
これをString.Replaceでやろうとするととても大変です。
なお、正規表現部分を

 ".+[都道府県]"

としたかったのですが、そうすると、"栃木県宇都宮市" のような市の名前に"都
" が入る文字列に対応できません。

 "(東京都|京都府|大阪府|北海道)|(.+[県])"

は、力技という感じがしないでもないですが、これが一番分かりやすいと思いま
す。ただ、これでも市の名前に "県" という漢字が入る市があったとしたら、う
まくいきません。
最短一致の指定子を付け、.+? と書いてもなぜかうまくいきません。

 ※ これはバクでしょうか？

そのため、このような問題に対応するには、{n,m}という量指定子を使い
ます。{n,m} については、次回別途取り上げます。

■□───────────────────────────────────
■□ グループ番号使った置換

"1024バイト、2バイト文字、バイト、アルバイト"

という文字列を
"1024byte、2byte文字、バイト、アルバイト"

と変更したい場合は、どうでしょうか。つまり、"\d+バイト" のときだけバイト
という文字をbyteに変換したいということです。
このコードを示します。

 string pattern = @"(\d+)バイト";
 string text = "1024バイト、2バイト文字、バイト、アルバイト" ;
 string ntext = Regex.Replace(text, pattern, "$1byte");
 Console.WriteLine(ntext);

置換文字列の中の、$1 という部分がこのプログラムの肝となります。
$1, $2, ... は、正規表現のグループ化() と対応していて、$1 と書くと、
(\d+)に一致した部分文字列と置き換わります。

では、もう一つ。

 "1234567890123456"

という１６桁の数字文字列を

 "1234-5678-9012-3456"

と４桁ごとに - を入れる文字列に変換するコードを書いてみましょう。

 string pattern = @"(\d{4})(\d{4})(\d{4})(\d{4})";
 string text = "1234567890123456";
 string ntext = Regex.Replace(text, pattern, "$1-$2-$3-$4");
 Console.WriteLine(ntext);

{4} という指定は、「直前の要素とちょうど n 回一致する」ことを示します。
つまりこの場合は、\d{4} で数字が４桁連続することを表しています。
(\d{4}) を４つ連続させるのは美しくない、という声も聞こえてきそうですが、
これしか考え付きませんでした。


==========================================================================
■ Gushwellの書籍

『C#プログラミング入門』
 http://www.amazon.co.jp/exec/obidos/ASIN/4777515982/gaius-22/

 目次は、こちらで確認できます。
 http://www.kohgakusha.co.jp/books/detail/978-4-7775-1598-1


─────────────────────────────────────
『C#プログラミングレッスン』  (ぼぼ週刊）
 ☆皆さまからの感想をお待ちしています。http://gushwell.ifdef.jp/mail.html
─────────────────────────────────────
 Published by Gushwell.
  Copyright (C) 2011 Gushwell All rights reserved.
  Microsoft MVP for Visual C#(Apr 2005 - Mar 2012)

 ■Gushwell's Page
 Gushwell's C# Dev Notes           : http://gushwell.ldblog.jp/
 Gushwell's C# Programming Page    : http://gushwell.ifdef.jp/
 Gushwell's F# Programming Diary   : http://techbank.jp/gushwell/
 Gushwellの読書ノート              : http://gushwell.jugem.jp/
─────────────────────────────────────
