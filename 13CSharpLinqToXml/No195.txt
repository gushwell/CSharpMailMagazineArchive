■━ [C#プログラミングレッスン] ━━━━━━━━━━━━━ No.195 ━□
  
   「LINQ to XML編」 -- 属性を取得する
                                                         by Gushwell 
□━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━■

今回は、属性を取得するコ―ドを示します。

■□―――――――――――――――――――――――――――――――――
■□ 属性を取り出す

今回も、sample.xmlを使って説明します。sample.xmlの一部を示します。

 <books>
   <book isbn="978-4873112213">
     <title>XML Hacks</title> 
     <publisher>Oreilly</publisher> 
     <authers>
        <auther>Michael Fitzgerald</auther> 
     </authers>
     <price>3360</price> 
   </book>
  ...

※ sample.xmlは、http://gushwell.ifdef.jp/mailmag/sample.xmlに掲載して
   あります。

 <book isbn="978-4873112213">

の isbn="978-4873112213" の部分が属性に当たりますが、この値を取得してみ
ましょう。
属性は、XElementクラスのAttributeメソッドを使うことで取り出すことがで
きます。

 XDocument xdoc = XDocument.Load("sample.xml");
 foreach (var xbook in xdoc.Root.Elements()) {
     XAttribute xisbn = xbook.Attribute("isbn");
     XElement xtitile = xbook.Element("title");
     XElement xprice = xbook.Element("price");
     Console.WriteLine("{0} ({1}) ISBN={2}", 
                         xtitile.Value, xprice.Value, xisbn.Value);
 }


クエリ式だと

 XDocument xdoc = XDocument.Load("sample.xml");
 var query = from xbook in xdoc.Root.Elements()
             select new {
                 Title = xbook.Element("title").Value,
                 Price = xbook.Element("price").Value,
                 Isbn = xbook.Attribute("isbn").Value
             };
 foreach (var book in query)
     Console.WriteLine("{0} ({1}) ISBN={2}", 
                        book.Title, book.Price, book.Isbn);

となります。

実行した結果を以下に示します。

 XML Hacks (3360) ISBN=978-4873112213
 C# CookBook (5200) ISBN=978-0596516109
 C# 3.0 Design Patterns (4200) ISBN=978-0596527730
 Linq in Action (4630) ISBN=978-1933988160
 Xml Pocket Reference (1160) ISBN=978-0596100506


----------------
おまけ

今回は、これでおしまいです。
が、これだけだと、あまりにも短すぎるのでちょっと一言。

これまで、クエリ式を使ったコ―ドと、ル―プを使った(クエリ式を使わない)
コ―ドの２つを示してきましたが、皆さんはどちらがわかりやすいと感じたで
しょうか。LINQに慣れていない方は、もしかしたら、クエリ式を使わないほう
がわかりやすいと感じたかもしれません。
でも僕は、クエリ式のほうが「何をやっているか」がより明確になるため、
わかりやすいと感じています。
なによりも、デ―タを取得する部分と、取得した要素を表示する部分が明確に
分けられることがメリットだと思っています。

どちらのコ―ドも LINQ to XMLには違いないのですが、可能なところでは、よ
りLINQ to XMLらしいクエリ式を使うようにしたいものです。

───────────────────────────────────
『C#プログラミングレッスン』  (ぼぼ週刊）                             
───────────────────────────────────
 Published by Gushwell.                                               
   Copyright (C) 2004-2009 Gushwell All rights reserved.              
   Microsoft MVP - Visual C#(Apr 2005 - Mar 2009)                     

 <<■ Gushwell's Page ■>>
 窓際プログラマ―の独り言  ：http://blog.livedoor.jp/gushwell/        
 窓際プログラマ―の読書三昧：http://gushwell.jugem.jp/                
 Gushwell's C# Programming Page：http://gushwell.ifdef.jp/            
 C#デザインパタ―ン :                                                 
  『増補改訂版Java言語で学ぶデザインパタ―ン入門 / 結城 浩(著)』      
   のサンプルコ―ドをC#に移植したものを掲載しています。               
   移植後のコ―ドの公開は、結城氏の了解を得ています。                 
   http://gushwell.ifdef.jp/dp/csdpindex.html                         
───────────────────────────────────


