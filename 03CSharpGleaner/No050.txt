┏━┳━━━━━━━━━━━━━━━━━━━━━━━━━┳━┳━┳━┓
┃☆┃ C#プログラミングレッスン                         ┃＿┃□┃×┃
┣━┻━━━━━━━━━━━━━━━━━━━━━━━━━┻━┻━┻━┫
┃ref と out                                                 No.050 ┃
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

みなさん、こん○○は。
とうとう、５０号の発行まで続けることが出来ました。「創刊準備号」を出し
たのが、昨年の8月13日なので、この５０号でちょうど1年間、連載を続けてき
たことになります。購読者数も少しずつ増えて、今では約６５０名の方が購読
してくださっています。本当にありがとうございます。

さて、今回は、ref と out キーワードについてです。

■──────────────────────────────────
■ ref

唐突ですが、2つの変数の値を入れ替える Swapメソッドを書いて見ましょう。

public static void Swap(int a, int b) {
    int temp = a;
    a = b;
    b = temp;
}

public static void Main() {
   int x = 10;
   int y = 20;
   Swap(x, y);
   System.WriteLine("x={0}, y={1}", x, y);
}

しかし、このコードを実行しても、x と y の値は入れ替わってくれません。
C#は、値渡しが基本ですから、当然ですね。
これを可能にするには、以下のように書く必要があります。

public static void Swap(ref int a, ref int b) {
    int temp = a;
    a = b;
    b = temp;
}

public static void Main() {
   int x = 10;
   int y = 20;
   Swap(ref x, ref y);
   System.WriteLine("x={0}, y={1}", x, y);
}

ref というキーワードを付けることで、参照渡しになります。こうすると、
Swapメソッドでパラメータに加えられた変更は、呼び出しメソッドの変数に反
映されるようになります。

Swapメソッドを呼び出すほうも、ref というキーワードを付加していることに
注意してください。
こうすることで、Swapを呼び出しているコードを読む人は、
 「ああ、Swapメソッドを呼び出すと、変数の値が変化するのだな」
ということが分かるわけです。
この言語仕様は、なかなか良いですね。これにより可読性がグンと上がります。


■──────────────────────────────────
■ out

もう一つの out というキーワードも、引数を参照渡しにするキーワードなの
ですが、ref と違って、呼び出し時点で値を初期化する必要がありません。

例えば、ある計算をした時に、２つの値を返したいとします。
メソッドの戻り値は、一つの値しか返すことが出来ませんので、こういったと
きに、out を使います。
以下のコードを見てください。

  private static int Divide(int a, int b, out remainder) {
      remainder = a % b;
      return a / b;
  }

  ※ わざわざ、こんなメソッドを定義する人はいないと思いますが...
     あくまでも、out の説明用のメソッドです。

この関数を呼び出すには、

  int remainder;
  int ans = Divide(10, 3, out remainder);

と記述します。
remainder を初期化しなくてもコンパイルエラーにはなりません。
一方、ref を使い、Divideを定義してしまうと、

  private static int Divide(int a, int b, ref remainder) {
      remainder = a % b;
      return a / b;
  }

  ...
    int remainder;
    int ans = Divide(10, 3, ref remainder);

は、remainderが初期化されていないということで、コンパイルエラーになっ
てしまいます。


■──────────────────────────────────
■ まとめ

・ref, out ともに引数を参照渡しにするキーワードである。
・ref out は、メソッドの引数宣言と関数呼び出し時の両方に記述する必要が
  ある。
・ref指定がある引数は、呼び出す前に、初期化しておく必要がある。
・out指定がある引数は、呼び出す前に、初期化しておく必要がない。


┌─┬─────────────────────────┬─┬─┬─┐
│☆│ C#プログラミングレッスン  (ぼぼ週刊）            │＿│□│×│
├─┴─────────────────────────┴─┴─┴─┤
│ Published by Gushwell  (Microsoft MVP for Visual C#)             │
│ Copyright (C) 2004-2005 Gushwell All rights reserved.            │
│-------------------- Gushwell's Page ---------------------------- │
│ 窓際プログラマーの独り言  ：http://blog.livedoor.jp/gushwell/    │
│ 窓際プログラマーの読書三昧：http://gushwell.jugem.jp/            │
│             よろしかったらアクセスしてみてください！             │
└─────────────────────────────────┘

