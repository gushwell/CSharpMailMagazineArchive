┏━┳━━━━━━━━━━━━━━━━━━━━━━━━━┳━┳━┳━┓
┃☆┃ C#プログラミングレッスン                         ┃＿┃□┃×┃
┣━┻━━━━━━━━━━━━━━━━━━━━━━━━━┻━┻━┻━┫
┃シールクラス                                               No.055 ┃
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

皆さん、こん○○は。僕の住んでいるところは、朝晩は、随分と涼しくなり、
秋らしくなってきました。皆さんのところはどうですか？
さて、今回は、シールクラスについてです。

■──────────────────────────────────
■ シールクラス

キーワード sealed を使うと、継承できないクラスを作ることができます。
日本語訳では、シールクラスとなっていますが、シールドクラスのほうがピン
とくるのではと思います。シールには、「固める」「封印する」といった意味
があります。つまり、そのクラスを固めてしまい、そこから継承できなくする
わけです。

例えば、

 sealed class MyClass {
     public int a;
     public int b;
 }

というクラスがあった場合、

  class DerivedClass : MyClass {
      public int c;
  }

とMyClassから継承しようとすると、コンパイルエラーとなります。

なお、 struct は、暗黙的にシールドされていますので、structの継承はでき
ません。

また、abstract クラスは、sealed キーワードを使用できません。
当たり前ですね。 abstract は、継承されることが前提となっているクラスで
すので、そのクラスに対して、sealedキーワードをつけるのは、矛盾していま
す。

■──────────────────────────────────
■ どんなときに使えるのか

このsealedキーワードは、どういったときに使うのでしょうか。
これは、とても難しい問題です。継承する必要があるのか無いのか、というの
は、将来になってみないと分からないことが多いのですから、安易に sealed
してしまうと、拡張するのが困難になってしまいます。
例えば、ＧＵＩのButtonクラスとか、TextBoxクラスなどが、sealedになって
いると困ります。Stream関連のクラスなどもそうですね。僕の考えでは、コン
ピュータ領域（こういった用語が適切かどうかはおいといて）のクラスは、
sealedを付けないほうが良いと思います。

一方、作成するシステムが扱う問題領域の中の具象クラスというのは、
sealedにしておいたほうが良いのかな、と僕は思います。そうすれば、設計者
の意図をソースコードに付加できますし、間違った継承をされることを防ぐこ
とが出来ます。

┌─┬─────────────────────────┬─┬─┬─┐
│☆│ C#プログラミングレッスン  (ぼぼ週刊）            │＿│□│×│
├─┴─────────────────────────┴─┴─┴─┤
│ Published by Gushwell  (Microsoft MVP for Visual C#)             │
│ Copyright (C) 2004-2005 Gushwell All rights reserved.            │
│-------------------- Gushwell's Page ---------------------------- │
│ 窓際プログラマーの独り言  ：http://blog.livedoor.jp/gushwell/    │
│ 窓際プログラマーの読書三昧：http://gushwell.jugem.jp/            │
│             よろしかったらアクセスしてみてください！             │
└─────────────────────────────────┘
