┏━┳━━━━━━━━━━━━━━━━━━━━━━━━━┳━┳━┳━┓
┃☆┃ C#プログラミングレッスン                         ┃＿┃□┃×┃
┣━┻━━━━━━━━━━━━━━━━━━━━━━━━━┻━┻━┻━┫
┃this 初期化子                                              No.052 ┃
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

　先週は、発行をお休みさせていただきました。どうも申し訳けありませんで
した。できるだけ、週に１回のペースを守っていきたいとは思っているのです
が、継続するというのは、なかなか難しいものです。毎日メルマガを発行され
ている方がいらっしゃいますが、本当にすごいと思います。
　さて、今日は、this初期化子です。この機能は、意外と知らない方が多いの
ではないでしょうか。

■──────────────────────────────────
■ thisキーワード

  class Employee {
      private string name;
      private  string alias;
      public Employee(string name, string alias) {
          this.name = name;
          this.alias = alias;
      }
      ... 省略
  }

  このような this の使い方は、 すでに、説明しましたね。this は、そのク
ラスの現在のインスタンスを参照するキーワードです。 この例では、name,
alias が引数とフィールドとで同じ名前になってしまったため、 this を付け
ることで曖昧さを解決しています。

■──────────────────────────────────
■ this 初期化子

thisには、実はあと２つの使い方があります。ひとつは、インデクサを定義す
る場合に使います。もうひとつは、コンストラクタの初期化子として使う方法
です。
インデクサについては、次回説明するとして、今日は、コンストラクタの初期
化子について説明します。

早速、以下のコードを見てください。

    public class MyClass {
        private int _x;
        private int _y;
        private string _s;
        public MyClass(int x, int y, string s) {
            _x = x;
            _y = y;
            _s = s;
        }
        public MyClass(int x, int y) : this(x, y, null) {
        }
        public MyClass() : this(0, 0, null) {
        }
    }

後ろから２つのコンストラクタは、this(...) コンストラクタ初期化子を使っ
て、１番目のコンストラクタを呼び出しています。

このように定義することで、このクラスを使う側は、引数の省略ができるよう
になります。

  MyClass mc1 = new MyClass(10, 20, "Hello");
  MyClass mc2 = new MyClass(10, 20);   // new MyClass(10, 20, null)
  MyClass mc3 = new MyClass();         // new MyClass(0, 0, null)


■──────────────────────────────────
■ this 初期化子を使わないと

ちなみに、this(...) 初期化子を使わない場合、以下のような記述になります。

    public class MyClass {
        private int _x;
        private int _y;
        private string _s;
        private void Initialization(int x, int y, string s) {
            _x = x;
            _y = y;
            _s = s;
        }
        public MyClass(int x, int y, string s) {
            Initialization(x, y, s);
        }
        public MyClass(int x, int y) {
            Initialization(x, y, null);
        }
        public MyClass() {
            Initialization(0, 0, null);
        }
    }

３つのコンストラクタがあり、 そこから、Initialization を呼ぶことで、初
期化を行っています。
this を使ったほうが、随分すっきりと書けますね。

┌─┬─────────────────────────┬─┬─┬─┐
│☆│ C#プログラミングレッスン  (ぼぼ週刊）            │＿│□│×│
├─┴─────────────────────────┴─┴─┴─┤
│ Published by Gushwell  (Microsoft MVP for Visual C#)             │
│ Copyright (C) 2004-2005 Gushwell All rights reserved.            │
│-------------------- Gushwell's Page ---------------------------- │
│ 窓際プログラマーの独り言  ：http://blog.livedoor.jp/gushwell/    │
│ 窓際プログラマーの読書三昧：http://gushwell.jugem.jp/            │
│             よろしかったらアクセスしてみてください！             │
└─────────────────────────────────┘

