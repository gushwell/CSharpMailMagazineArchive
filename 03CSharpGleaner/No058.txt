┏━┳━━━━━━━━━━━━━━━━━━━━━━━━━┳━┳━┳━┓
┃☆┃ C#プログラミングレッスン                         ┃＿┃□┃×┃
┣━┻━━━━━━━━━━━━━━━━━━━━━━━━━┻━┻━┻━┫
┃属性の指定                                                 No.058 ┃
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

今回は、属性について説明します。といってもカスタム属性の作成についての
説明ではなく、属性を利用する側にたった説明です。

■──────────────────────────────────
■ 属性とは

C# には、 「属性」と呼ばれる機構があり、ソースコードの特定のエンティテ
ィ(アセンブリ、 クラス、メソッドなど）に追加情報を指定できます。この追
加情報を「属性」と呼んでいます。

属性を指定するときは、属性の名前を角かっこで囲み、対象となるエンティテ
ィの宣言の前に置きます。

たとえば、Webサービスのメソッドであることを指定する「WebMethod属性」 
をメソッドに適用する場合は、次のように記述します。

  [WebMethod]
  public int Add(int a, int b) {
       return a + b;
  }

たったこれだけで、複雑なライブラリの呼び出しなどを記述することなく、
Webサービスのメソッドとして動作するようになります。
この属性により、宣言的なプログラミングが可能になります。

..NET Frameworkの属性の名前は、最後に、Attributeが付くのが一般的ですが、
C#では、この Attributeを省略することができます。ですので、次の２つは同
じ意味になります。

  [WebMethod]
  [WebMethodAttribute]

.NET Framework には、多くの属性が定義されており、その属性を付加するこ
とで、動作を変更したり、アセンブリに情報を付加したりすることができます。


■──────────────────────────────────
■ 属性のパラメータ

..NET Frameworkに定義されている属性の多くには、パラメータが用意されてい
ます。パラメータを指定した例を示します。

[DllImport("user32.dll", SetLastError=false, ExactSpelling=false)]

※ DllImport は、アンマネージドDLLをリンクするための属性ですが、
   今回は、アンマネージドコードの呼び出しを説明するのが目的ではないの
   で、この詳細については、後日改めて説明します。


■──────────────────────────────────
■ 属性はクラスである。

全ての属性は、System.Attribute から直接または間接的に派生するクラスで
す。例えば、.NET Framework の SDK ドキュメントで、DllImportAttribute 
の説明を見ていただければ、分かると思いますが、DllImportAttribute はク
ラスであり、コンストラクタ、フィールド、プロパティなどが存在している
のを確認できると思います。

先ほど、パラメータを使った例を示しましたが、このパラメータを順に見て行
きましょう。

まず、 "user32.dll" ですが、これは、DllImportAttributeクラスのコンスト
ラクタの引数にあたります。アンマネージ メソッドが格納されているDLL の
名前を指定します。

次の、SetLastError や ExactSpelling は、パブリックなフィールドに該当し
ます。これらのパラメータは省略可能です。省略した場合は、デフォルトの値
が使われることになっています。この名前によるパラメータの指定は、順不同
であり、

[DllImport("user32.dll",  ExactSpelling=false, SetLastError=false)]

と書いても同じことです。

┌─┬─────────────────────────┬─┬─┬─┐
│☆│ C#プログラミングレッスン  (ぼぼ週刊）            │＿│□│×│
├─┴─────────────────────────┴─┴─┴─┤
│ Published by Gushwell  (Microsoft MVP for Visual C#)             │
│ Copyright (C) 2004-2005 Gushwell All rights reserved.            │
│-------------------- Gushwell's Page ---------------------------- │
│ 窓際プログラマーの独り言  ：http://blog.livedoor.jp/gushwell/    │
│ 窓際プログラマーの読書三昧：http://gushwell.jugem.jp/            │
│             よろしかったらアクセスしてみてください！             │
└─────────────────────────────────┘
