┏━┳━━━━━━━━━━━━━━━━━━━━━━━━━┳━┳━┳━┓
┃☆┃ C#プログラミングレッスン            -- 入門編 -- ┃＿┃□┃×┃
┗━┻━━━━━━━━━━━━━━━━━━━━━━━━━┻━┻━┻━┛
                                                          − No.005 −
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
■ 繰り返し 繰り返し for と  do-while                      2004/09/11
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

■──────────────────────────────────
■ 今日のプログラム

◆プログラムコード

  1: using System;
  2:
  3: class Sample1 {
  4:    static void Main() {
  5:        Console.WriteLine("平成  西暦 ");
  6:        for ( int year = 1; year <= 16; year++ )  {
  7:            Console.WriteLine(" {0}   {1}", year, year+1988);
  8:        }
  9:    }
 10: }


◆結果

平成  西暦
 1   1989
 2   1990
 3   1991
 4   1992
 5   1993
 6   1994
 7   1995
 8   1996
 9   1997
 10   1998
 11   1999
 12   2000
 13   2001
 14   2002
 15   2003
 16   2004

■──────────────────────────────────
■ プログラムの解説

◆for 文

前回の while 文を動作を変更せずに、for文を使ったコードに書き変えたもの
です。for 文の形式は次の通りです。

  for ([initializers]; [expression]; [iterators]) 
      statement
  
この for 文は、以下の while 文と等価です。

   [initializers];
   while ( [expression] ) {
       statement
       [iterators];
   }

[initializers]
  ループ開始時に１回だけ実行されます。通常、ループカウンタの初期化を行
  います。C#では、変数の宣言も行えますので、
    int year = 1;
  とループカウンタは、ここで宣言するのが普通です。

[expression]
  この式は、ループを繰り返すかどうかををテストします。記述した式が「真」
  の間は、ループを繰り返します。

[iterators]
  ループ カウンタをインクリメントまたはデクリメントする式を書きます。 
  ループ内の[statement]の実行が終わると、 [iterators] の処理を実行し、
  その後、[expression]で書かれた条件テストが行われます。

for文の [initializers], [expression], [iterators] は、すべてオプション
なので、たとえば次のfor分は無限ループとなります。

  for ( ; ; ) {
      ...
  }


■──────────────────────────────────
■ 補足事項・関連事項

◆do-while

C#のもう一つのループ制御文 do-while を使うと、上のコードは、以下のよう
になります。

 using System;

 class Sample1 {
     static void Main() {
         Console.WriteLine("平成  西暦 ");
         int year = 1;
         do {
             Console.WriteLine(" {0}   {1}", year, year + 1988);
             year++;
         } while ( year <= 16 );
     ｝
 }

do-whileは、 while 文と似ていますが、while文が、繰り返しの前に終了条件
をテストするのに対し、ループ内の処理が終わってから、終了条件をテストす
る点が異なっています。このため、do-while 文は、最低1回はループ内の処理
が行われることになります。do-while 文は、for, while 文と比較すると、使
用頻度はかなり低くなります。

----------------------------------------------------------------------
※ご挨拶
このメールマガジンの発行から、約１ヶ月がたちました、ほんのすこしづつで
すが、読者も増えつつあるようで、ありがたいと思っています。
ただ、読者層が見えないので、本当にこの内容でよいのかちょっと不安です。
はじめてプログラミングする人も読んでいるかも知れないと思うと、できるだ
け平易な言葉を使って丁寧に書かなければ、と思いますし、他のプログラム言
語の経験者には、わかりきった内容なんだろうなー、なんて思ったり、なかな
か難しいものですね。
とにかく、これからも頑張ってメルマを発行し続けていこうと思いますので
末永くよろしくお願いします。



