┏━┳━━━━━━━━━━━━━━━━━━━━━━━━━┳━┳━┳━┓
┃☆┃ C#プログラミングレッスン            -- 入門編 -- ┃＿┃□┃×┃
┗━┻━━━━━━━━━━━━━━━━━━━━━━━━━┻━┻━┻━┛
                                                          − No.008 −
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
■ else if                                                 2004/09/30
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

読者のみなさん、いかがお過ごしですか、今日の朝、外に出て見たら、自転車
が倒れているし、庭に置いてある椅子がとんでもないところにころがっていた
りで、びっくりしてしまいました。昨夜の台風かなり凄かったみたいですね。
でも、熟睡していた僕は、まったく気がつきませんでした。(^ ^;

さて、前回は、多分岐処理をするための switch文の説明をしましたが、
switch文では表現できない、多分岐処理もあります。そのときに使うのが、if
文を応用した else if 配置です。

■──────────────────────────────────
■ 今日のサンプルプログラム

◆プログラムコード

  1: using System;
  2:
  3: class Program {
  4:     static void Main() {
  5:         string line = Console.ReadLine();
  6:         int num = int.Parse(line);
  7:         if ( num > 80 )
  8:             Console.WriteLine("Aランクです");
  9:         else if ( num > 60 )
 10:             Console.WriteLine("Bランクです");
 11:         else if ( num > 40 )
 12:             Console.WriteLine("Cランクです");
 13:         else
 14:             Console.WriteLine("Dランクです");
 15:         Console.ReadLine();
 16:     }
 17: }

◆実行結果

50            <--- 入力した数値
Cランクです。


■──────────────────────────────────
■ プログラムの解説

◆ else if

上記プログラムのように、ある範囲の中にあるかどうかを判定したい時などは、
switch 文を使うことができません。このような時に使うのが、else if です。
通常の if 文と同様、if に対応した文が複数の場合には、以下のように { と
} で括ります。

  if (式) {
      文1-1;
      文1-2;
  } else if (式2) {
      文2-1;
      文2-2;
  } else if (式3) {
      文3-1;
      文3-2;
  } else if (式4) {
      文4-1;
      文4-2;
  }

最後の else部は、上記いずれにも条件にも該当しないときの処理です。最後
の else 部は省略可能です。

◆字下げについて

この多分岐の if 文を以下のように書くことはお勧めしません。

    if ( num > 80 )
        Console.WriteLine("Aランクです");
    else
        if ( num > 60 )
            Console.WriteLine("Bランクです");
        else
            if ( num > 40 )
                Console.WriteLine("Cランクです");
            else
                Console.WriteLine("Dランクです");

確かに文法上の構造から見れば正しいのですが、この字下げは、意味的な構造
を正しく表していません。
一つの変数の値によって、処理を分岐させる場合には、サンプルプログラムで
示したような字下げをすることをお勧めします。


■──────────────────────────────────
■ 補足事項・関連事項

上記のサンプルプログラムは、

    if ( num > 80 )
        Console.WriteLine("Aランクです");
    else if ( num > 60 && num <= 80)
        Console.WriteLine("Bランクです");
    else if ( num > 40 && num <= 60)
        Console.WriteLine("Cランクです");
    else if ( num <= 40 )
        Console.WriteLine("Dランクです");

のように書くことも可能ですが、これはコードが冗長ですね。プログラミング
を始めたばかりの人は、このように書く人が結構いるようです。
最初の ( num > 80 ) が成り立たない場合には、無条件に( num <= 80 ) が成
立するわけですから、次の if 文で、自明の num <= 80 を判断するのは、無駄
な処理です。

ちなみに、値がある範囲にあるかどうかを判断する場合には、僕は、以下のよ
うに書くことにしています。

   if ( 1<= num && num <= 100 )

このように、判断したい変数を、数値ではさむことで、num という変数の値が、
1 と 100 の間にあるかどうかが、より明確になります。
