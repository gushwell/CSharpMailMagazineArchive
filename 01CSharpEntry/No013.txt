┏━┳━━━━━━━━━━━━━━━━━━━━━━━━━┳━┳━┳━┓
┃☆┃ C#プログラミングレッスン            -- 入門編 -- ┃＿┃□┃×┃
┗━┻━━━━━━━━━━━━━━━━━━━━━━━━━┻━┻━┻━┛
                                                          − No.013 −
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
■定数、+=演算子                                           2004/11/05
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

■──────────────────────────────────
■ 今日のサンプルコード

◆プログラムコード

  1: using System;
  2:
  3: class Program {
  4:     static void Main() {
  5:         const char slash = '/';
  6:         const int capacity = 5;
  7:         string s = Console.ReadLine();
  8:         int col = 0;
  9:         string buf = "";
 10:         foreach (char ch in s) {
 11:             col++;
 12:             if (col > capacity) {
 13:                 buf += slash;
 14:                 col = 1;
 15:             }
 16:             buf += ch;
 17:         }
 18:         Console.WriteLine(buf);
 19:     }
 20: }


◆実行結果

 123456789012
 12345/67890/12


■──────────────────────────────────
■ プログラムの解説

この、サンプルコードは、入力した文字列を、5文字ずつスラッシュ(/)で区切
り、画面に表示しているプログラムです。
一旦、bufというバッファーに結果を入れ込んで行き、最後にbufの内容を表示
しています。

◆定数

5行目、  6行目が定数を定義している部分です。 C#で定数を定義するには、
constキーワードを使います。 通常の「変数の宣言+初期化」の前に const を
書くだけです。

  const int max_count = 20;
  const string hello = "こんにちは";

定数は、プログラムの中で変化しない（定まった)値に名前を付けたものです。
上記のように宣言と同時に、初期化する必要があります。
値を変更できませんので、以下のようの2行に分ける書き方はできません。

   const int capacity;
   capacity = 5;

今回のサンプルコードでは、 定数のありがたみが感じられませんが、もし、5
という数値がプログラムのあちこちに現れていたら、どうでしょうか。そして、
5 という数値が、分割する文字数を表す 5 の他に、別の意味で 5 が使われて
いたとしたら、後からプログラムを読んだ時に、とても困りますよね。分割す
る文字数を 5 ではなく、6 に変更する必要が出てきた場合、constを使ってい
ないとすると、5 と書いてある箇所を全て調べて、6 に変更すべきかどうかを
いちいちチェックしなければいけません。const を使うことで、１箇所直すだ
けで済みますから、プログラムの修正がとても楽になります。
また、'/' の部分も同様ですよね。

◆ += 演算子

13行目と16行目に、 += という新しい演算子が出てきましたので、この説明も
しましょう。

 a += b;
は、
 a = a + b;
と同じです。文字列においては、連結を意味し、数値の場合には、加算を意味
します。
-=, *=, /= 演算子もありますが、 こちらは、文字列に対して使うことはでき
ません。

なお、
  x *= y + 2;
は、
 x = x * ( y + 2 );
であり、
 x = x * y + 2;
ではありませんので、注意してください。


■──────────────────────────────────
■ 補足事項・関連事項

◆定数宣言あれこれ

定数宣言は、複数の定数を宣言できます。たとえば、次のように宣言できます。

  public const int x = 1, y = 2, z = 3;

また、定数は、初期化部に式を書くことができます。ただし、その式は、コン
パイル時に値が決定できなくてはなりません。たとえば、次のようになります。

  const int cnst1 = 5;
  const int cnst2 = cnst1 * 2 + 100;

◆定数名の命名スタイル

定数名は、すべて大文字で書く流儀と、通常の変数と同様、小文字で始める流
儀があるようです。マイクロソフト社のMSDNのドキュメントなどは、小文字で
すが、「オブジェクト倶楽部」のコーディング規約の会
    http://www.objectclub.jp/community/codingstandard/
からたどれる、『C#コーディング標準』では、見ただけで定数と分かるように
MAX_COUNT などとすべて大文字で書くスタイルを推奨しています。

どちらでも良いと思いますが、 僕個人的には、C言語時代からずーと大文字ス
タイルを使っていた関係で、大文字スタイルの方が好きです。
ただ、MSDNの例にならい今回は小文字のスタイルとしました。
