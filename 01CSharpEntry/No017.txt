┏━┳━━━━━━━━━━━━━━━━━━━━━━━━━┳━┳━┳━┓
┃☆┃ C#プログラミングレッスン            -- 入門編 -- ┃＿┃□┃×┃
┗━┻━━━━━━━━━━━━━━━━━━━━━━━━━┻━┻━┻━┛
                                                          − No.017 −
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
■エスケープシーケンス                                     2004/12/02
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

■──────────────────────────────────
■ 今日のサンプルコード

◆プログラムコード

  1:using System;
  2:
  3:class Program {
  4:    static void Main(string[] args) {
  5:        Console.WriteLine("C#¥n.NET");
  6:        Console.WriteLine("end.");
  7:    }
  8:}



◆実行結果

 C#
 .NET
 end.


■──────────────────────────────────
■ プログラムの解説

◆エスケープシーケンス

5 行目の文字列の中に ¥n という表記がありますが、これをエスケープシーケ
ンスと言います。¥n は、改行コードを表しています。 注意していただきたい
点は、¥n はソースコード上は２文字ですが、 ２文字ではなく１文字を表して
いるということです。このエスケープシーケンスは、目に見えない文字など特
殊な文字をプログラムで扱いたい時に利用します。
また、文字列の中で、¥ マークそのものや、" を扱いたい時などにも利用しま
す。
この ¥記号をエスケープ文字と言います。

C#では以下のようなエスケープシーケンスが利用できます。

 ¥'  シングルクォーテーション
 ¥"  ダブルクォーテーション
 ¥¥  円マーク
 ¥0  null
 ¥a  ビープ音
 ¥b  バックスペース
 ¥f  改ページ
 ¥n  改行
 ¥r  キャリッジリターン
 ¥t  水平タブ
 ¥v  垂直タブ
 ¥x16進数  16進エスケープシーケンス
 ¥u16進数  UNICODE文字 0000 〜 FFFF


■──────────────────────────────────
■ 補足事項・関連事項

◆逐語的文字列リテラル

エスケープ文字の話が出てきたので、ついでに、逐次的文字列リテラルの説明
もしてしまいましょう。
C#には、@ で始まる「逐次的文字列リテラル」という書き方が存在します。逐
次的文字列リテラルでは、エスケープシーケンスを含めることができません。
その代わり、¥ 記号を多用する文字列を書く時に、とても便利です。
例えば、 「C:¥WINDOWS¥system32¥Visual C#¥abc.txt」というファイル名の場
合、通常の文字列リテラルでは、

   "C:¥¥WINDOWS¥¥system32¥¥Visual C#¥¥abc.txt"

と ¥ 記号を連続させる必要がありますが、逐次的文字列リテラルでは、

   @"C:¥WINDOWS¥system32¥Visual C#¥abc.txt"

と、¥ 記号を２つ続けて書く必要がありません。

なお、 逐語的文字列リテラルにおける「エスケープ シーケンスなし」の規則
には、 例外が一つあります。それは、二重引用符を 2 つ重ねることで文字列
の中に二重引用符を含められることです。

   @"２重引用符""を含められます"

