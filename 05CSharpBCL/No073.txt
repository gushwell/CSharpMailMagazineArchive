┏━┳━━━━━━━━━━━━━━━━━━━━━━━━━┳━┳━┳━┓
┃☆┃ C#プログラミングレッスン　　　　　　　　　　　　 ┃＿┃□┃×┃
┣━┻━━━━━━━━━━━━━━━━━━━━━━━━━┻━┻━┻━┫
┃DateTime構造体　 　　　　　　　　　　　　　　　　　　 　　　No.073┃
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

前回お知らせしたように、 今回から数回にわたり、.NET Framework の基本的
なクラスについての説明をします。
このメルマガを購読されている方のほとんどは、既に、C#で何らかのプログラ
ムを組んでいらっしゃる方だと思いますので、既知の内容になってしまうかも
知れませんが、どうぞ、お付き合いください。

では、今回は、DateTime構造体について
 ※ おいおい、「基本クラス編」と言いながら構造体かよ、なんて突っ込ま
    ないでくださいね。

DateTime構造体は、名前のとおり、日付や時刻を扱います。文章で説明するよ
り、コードを示したほうが理解が早いと思いますので、今回は、説明は軽めに
しています。

■──────────────────────────────────
■ 日付を扱う

  ● DateTime構造体の初期化

    DateTime dt = new DateTime(2005,2,15);

    コンストラクタの引数に、年、月、日 を指定し、dt を初期化しています。

  ● Year, Month, Day, DayOfWeekプロパティ

    Console.WriteLine(string.Format("{0}/{1}/{2}",
                                      dt.Year, dt.Month, dt.Day));
    Console.WriteLine(dt.DayOfWeek.ToString());

    これらのプロパティは、読み取り専用です。
    DayOfWeekは、曜日を示すプロパティです。


  ● n年後, nヵ月後, n日後を求める

    2年5ヶ月16日後を求めるコードです。

    DateTime dt2 = dt.AddYears(2);
    DateTime dt3 = dt2.AddMonths(5);
    DateTime dt4 = dt3.AddDays(16);

    ※ この３行は、以下の１行にまとめることも出来ます。
       DateTime dt4 = dt.AddYears(2).AddMonths(5).AddDays(16);

    なお、日付の演算で注意しないといけないのは、
     dt.AddYears(2);
    としても、dtそのものは、2年後にはならないということです。
    計算結果は、戻り値として返ってきますので、別の変数に代入しないとい
    けません。これは、初心者が良く間違えるところです。
    dtそのものを２年後としたいのならば、以下のように記述します。
   
    dt1 = dt.AddYears(2);

  ● 今日の日付の取得
    DateTime dt = DateTime.Today;

  ● 文字列から日付への変換
    DateTime dt = DateTime.Parse("2005/2/15");


■──────────────────────────────────
■ 時刻も含めて扱う。

  ● DateTime構造体の初期化

    DateTime dt = new DateTime(2005,2,15,8,45,20);

       2005年2月15日、8時45分20秒で初期化

  ● 時分秒、1/100秒を取得する

    int hour = moment.Hour;
    int minute = moment.Minute;
    int second = moment.Second;
    int millisecond = moment.Millisecond;

    これらのプロパティは、読み取り専用です。

  ● n時, n分, n秒後を求める

    DateTime dt2 = dt.AddHours(2);
    DateTime dt3 = dt2.AddMinutes(5);
    DateTime dt4 = dt3.AddSeconds(16);

    ※ この３行は、以下の１行にまとめることも出来ます。
       DateTime dt4 = dt.AddYears(2).AddMonths(5).AddSeconds(16);

  ● 現在の時刻（日付付き）を取得
    DateTime dt = DateTime.Now;

  ● 文字列から日付への変換
    DateTime dt1 = DateTime.Parse("2005/2/15");
    DateTime dt2 = DateTime.Parse("平成17年2月15日")


■──────────────────────────────────
■ その他の機能

  ● ２つの日付の間隔を求める

    DateTime dt1 = new DateTime(2006,1,20);
    DateTime dt2 = new DateTime(2006,3,15);
    TimeSpan ts = dt2 - dt1;
    Console.WriteLine("{0}日間",ts.Days);
    DateTime dt3 = dt2 - ts;
    Console.WriteLine("{0}/{1}/{2}",dt3.Year, dt3.Month, dt3.Day);

    TimeSpan構造体は、時間間隔を表す構造体です。

  ● 比較

    DateTime dt1 = new DateTime(2006,1,20);
    DateTime dt2 = new DateTime(2006,3,15);
    if ( dt1 > dt2 )
        Console.WriteLine("dt2の方が新しい日付です");
    if ( dt1 == dt2 )
        Console.WriteLine("dt1 と dt2は、同じ日付です");

    dt1, dt2 に 時刻まで入っている場合は、注意が必要。

  ● 文字列への変換

    DateTime dt = DateTime.Now;
    string s;
    s = dt.ToString();
    Console.WriteLine(s);
    s = dt.ToShortDateString();
    Console.WriteLine(s);
    s = dt.ToLongDateString();
    Console.WriteLine(s);
    s = dt.ToShortTimeString();
    Console.WriteLine(s);
    s = dt.ToLongTimeString();
    Console.WriteLine(s);
    s = dt.ToString("yyyy年MM月dd日 hh時mm分ss秒");
    Console.WriteLine(s);

    結果は、以下のようになります。

    2005/12/02 18:48:14
    2005/12/02
    2005年12月2日
    18:48
    18:48:14
    2005年12月02日 06時48分14秒

┌─┬─────────────────────────┬─┬─┬─┐
│☆│ C#プログラミングレッスン  (ぼぼ週刊）            │＿│□│×│
├─┴─────────────────────────┴─┴─┴─┤
│ Published by Gushwell  (Microsoft MVP for Visual C#)             │
│ Copyright (C) 2004-2005 Gushwell All rights reserved.            │
│-------------------- Gushwell's Page ---------------------------- │
│ 窓際プログラマーの独り言  ：http://blog.livedoor.jp/gushwell/    │
│ 窓際プログラマーの読書三昧：http://gushwell.jugem.jp/            │
│             よろしかったらアクセスしてみてください！             │
└─────────────────────────────────┘