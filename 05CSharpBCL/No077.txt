┏━┳━━━━━━━━━━━━━━━━━━━━━━━━━┳━┳━┳━┓
┃☆┃ C#プログラミングレッスン                         ┃＿┃□┃×┃
┣━┻━━━━━━━━━━━━━━━━━━━━━━━━━┻━┻━┻━┫
┃System.Collections.Hashtableクラス                          No.077┃
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

■──────────────────────────────────
■ Hashtableの簡単な使い方

Hashtableクラスは、「キー」と「値」の組み合わせを管理するクラスです。
以下にサンプルコードを示します。

 Hashtable ht = new Hashtable();
 ht.Add("BCC", "Blind Carbon Copy");
 ht.Add("POP", "Post Office Protocol");
 ht.Add("MIME", "Multipurpose Internet Mail Extension");

 Console.WriteLine(ht["MIME"]);
 Console.WriteLine(ht["BCC"]);
 Console.WriteLine(ht["POP"]);

結果は、

  Multipurpose Internet Mail Extension
  Blind Carbon Copy
  Post Office Protocol

と表示されます。

Addメソッドで、キー（第１引数）とそれに対応する値（第２引数）を登録し、
値を取り出すときには、配列の要素にアクセスするような感じで、値を取り出
せます。 [ ] の中は、インデックスではなく、Addメソッドで与えたキーを渡
します。

なお、この例では、「キー」と「値」共に、文字列を使いましたが、Addメソッ
ドは、objectを受け取るメソッドですので、int, decimal, 独自のクラスなど
どんなものでも指定することが可能です。


■──────────────────────────────────
■ Hashtableのすべての要素を取り出す

Hashtableに格納される要素の型は  DictionaryEntry型になります。
foreachを使って、 すべての要素を取り出すには、以下のようなコードを書き
ます。

 foreach (DictionaryEntry de in ht) {
    Console.WriteLine(de.Key + "=" + de.Value);
 }

実行結果は、

 MIME=Multipurpose Internet Mail Extension
 POP=Post Office Protocol
 BCC=Blind Carbon Copy

となります。
注意しなくてはならないのは、取り出す順序は「登録順ではない」ということ
です。Hashtableでは、ArrayListとは異なり登録順を保持していません。


■──────────────────────────────────
■ Hashtableのすべての要素を取り出す（もう１つの方法）

 foreach( string key in ht.Keys) {
     Console.WriteLine(key + "=" + ht[key]);
 }

Keysプロパティは、 Hashtable 内のキーを格納している ICollection を取得
します。つまり、foreachでキーを一つずつ取り出し、対応する、値を ht[key]
で取得しています。


■──────────────────────────────────
■ その他のメソッド

ContainsKey メソッド
  Hashtable に特定のキーが格納されているかどうかを判断します。

  指定したキーを持つ要素が Hashtable に格納されている場合は true、それ
  以外の場合は false が返ります。

  if ( ht.ContainsKey(key) )
      Console.WriteLine("格納されています");

ContainsValue メソッド
  Hashtable に特定の値が格納されているかどうかを判断します。
  指定した value を持つ要素が Hashtable に格納されている場合は true、
  それ以外の場合は false が返ります。

  if ( ht.ContainsKey(value) )
      Console.WriteLine("格納されています");


Clearメソッド
  Hashtable からすべての要素を削除します。

  ht.Clear();

Removeメソッド
  指定したキーを持つ要素を Hashtable から削除します。

  ht.Remove(key);

┌─┬─────────────────────────┬─┬─┬─┐
│☆│ C#プログラミングレッスン  (ぼぼ週刊）            │＿│□│×│
├─┴─────────────────────────┴─┴─┴─┤
│ Published by Gushwell  (Microsoft MVP for Visual C#)             │
│ Copyright (C) 2004-2006 Gushwell All rights reserved.            │
│-------------------- Gushwell's Page ---------------------------- │
│ 窓際プログラマーの独り言  ：http://blog.livedoor.jp/gushwell/    │
│ 窓際プログラマーの読書三昧：http://gushwell.jugem.jp/            │
│             よろしかったらアクセスしてみてください！             │
└─────────────────────────────────┘