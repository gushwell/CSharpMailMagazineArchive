
■━ [C#プログラミングレッスン] ━━━━━━━━━━━━━━━ No.340 ━□

「シリアライズ編」-- バイナリシリアル化(1)
                                                            by Gushwell  
□━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━■

■□───────────────────────────────────
■□ バイナリシリアル化

では、さっそくシリアル化のコードを見ていきましょう。
まず、クラスをシリアル化するためにやることは、クラスに Serializable 属性を
付加することです。

 [Serializable]
 public class MyObject {
     public int n1 = 0;
     public int n2 = 0;
     public double d1 = 0.0;
     public String str = null;
     public DateTime date;
 }

このクラスのインスタンスをファイルにシリアル化するコードを以下に示します。

 MyObject obj = new MyObject {
     n1 = 10,
     n2 = 123,
     d1 = 987.6,
     str = "sample string",
     date = new DateTime(2012, 9, 1),     
 };
 IFormatter formatter = new BinaryFormatter();
 using (Stream stream = new FileStream("TestFile.dat", FileMode.Create, 
                                                       FileAccess.Write)) {
     formatter.Serialize(stream, obj);
 }

利用するクラスは、BinaryFormatterと、ファイル出力に利用するStreamです。
BinaryFormatterのインスタンスを生成し、FileStreamとシリアル化したいオブジェ
クトを引数に、Serializeメソッドを呼び出します。
これで、MyObjectのインスタンスの中身をファイルに保存することができます。


■□───────────────────────────────────
■□ 逆シリアル化

では、次に、シリアル化したファイルを逆シリアル化して、オブジェクトを復元する
コードを示します。

 IFormatter formatter = new BinaryFormatter();
 MyObject obj = null;
 using (Stream stream = new FileStream("TestFile.dat", FileMode.Open,
                                                       FileAccess.Read)) {
     obj = (MyObject)formatter.Deserialize(stream);
 }
 // 以下、内容を確認するコード
 Console.WriteLine("n1 = {0}", obj.n1);
 Console.WriteLine("n2 = {0}", obj.n2);
 Console.WriteLine("d = {0}", obj.d1);
 Console.WriteLine("str = {0}", obj.str);
 Console.WriteLine("data = {0}", obj.date);

インスタンスを生成するのは、Deserializeの仕事ですので、MyObjectを明示的に
new する必要はありませんん。

このコードを実行すると以下のような結果が得られます。

 n1 = 10
 n2 = 123
 d = 987.6
 str = sample string
 data = 2012/09/1 0:00:00


確かに、クラスのインスタンスが復元されていることが確認できます。


==========================================================================
■ Gushwellの書籍

『C#プログラミング入門』
 http://www.amazon.co.jp/exec/obidos/ASIN/4777515982/gaius-22/

 目次は、こちらで確認できます。
 http://www.kohgakusha.co.jp/books/detail/978-4-7775-1598-1


─────────────────────────────────────
『C#プログラミングレッスン』  (ほぼ週刊）                                 
☆皆さまからの感想をお待ちしています。http://gushwell.ifdef.jp/mail.html  
─────────────────────────────────────
Published by Gushwell.                                                    
 Copyright (C) 2012 Gushwell All rights reserved.                        
 Microsoft MVP for Visual C#(Apr 2005 - Mar 2013)                        

■Gushwell's Page                                                         
facebook Page                     : http://www.facebook.com/CSharpLesson  
Gushwell's C# Dev Notes           : http://gushwell.ldblog.jp/            
Gushwell's C# Programming Page    : http://gushwell.ifdef.jp/             
Gushwellの読書ノート              : http://gushwell.jugem.jp/             
Twitterアカウント                 : @gushwell                             
─────────────────────────────────────

