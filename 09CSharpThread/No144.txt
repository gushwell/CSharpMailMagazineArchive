┏━┳━━━━━━━━━━━━━━━━━━━━━━━━━┳━┳━┳━┓
┃☆┃ C#プログラミングレッスン                         ┃＿┃□┃×┃
┣━┻━━━━━━━━━━━━━━━━━━━━━━━━━┻━┻━┻━┫
┃ BackgroundWorker(2)                                        No.144┃
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

■──────────────────────────────────
■ BackgroundWorkerを使ってプログレスバーを表示

今回は、プログレスバーのサンプルです。

public partial class MyForm : Form {
    public MyForm() {
        InitializeComponent();
    }

    BackgroundWorker _bw = new BackgroundWorker();
    
    private void MyForm_Load(object sender, EventArgs e) {
        _bw.DoWork += new DoWorkEventHandler(_bw_DoWork);
        _bw.ProgressChanged += 
            new ProgressChangedEventHandler(_bw_ProgressChanged);
        _bw.RunWorkerCompleted += 
            new RunWorkerCompletedEventHandler(_bw_RunWorkerCompleted);
        _bw.WorkerSupportsCancellation = true;
        _bw.WorkerReportsProgress = true;
        _bw.RunWorkerAsync();
    }

    void _bw_RunWorkerCompleted(object sender, 
                                RunWorkerCompletedEventArgs e) {
        this.DialogResult = DialogResult.OK;
    }

    void _bw_ProgressChanged(object sender, 
                             ProgressChangedEventArgs e) {
        progressBar1.Value = e.ProgressPercentage;
    }

    void _bw_DoWork(object sender, DoWorkEventArgs e) {
        for ( int i = 1; i <= 100; i++ ) {
            if (_bw.CancellationPending) {
                e.Cancel = true;
                return;
            }
            System.Threading.Thread.Sleep(100);
            _bw.ReportProgress(i, null);
        }
    }

    private void MyForm_Shown(object sender, EventArgs e) {
        _bw.WorkerSupportsCancellation = true;
    }

    private void cancelButton_Click(object sender, EventArgs e) {
        _bw.CancelAsync();
        this.DialogResult = DialogResult.Cancel;
    }
}

基本的なプログラムの構造は、前回とほぼ同じですので、違っている部分のみ
を説明します。

●ProgressPercentageプロパティ
プログレスの表示は、_bw_ProgressChanged イベントハンドラで行っており、
引数 ProgressChangedEventArgs の ProgressPercentage に入っているパーセ
ント値を progressBar1.Value にセットしています。

なお、この ProgressPercentage の値は、_bw_DoWork() メソッド内で呼び出し
ている ReportProgress() メソッドの第１引数の値になります。

ここでは、単純化のために 100 回ループさせ、そのループカウンターを引数に
渡していますが、実際のアプリケーションでは、処理が何パーセント進んだか
を何らかの方法で求める必要があります。

●WorkerSupportsCancellation プロパティ
BackgroundWorker の WorkerSupportsCancellation プロパティを true にして、
キャンセル可能にしています。キャンセルボタンを押したときには、
CancelAsync() メソッドを呼び出して、バックグラウンドのスレッドをキャン
セルしています。

●おまけ　DialogResult
このフォームを呼び出した側で、正常に終わったのか、キャンセルされたのか
を判断できるように、DialogResult に 正常終了なら、DialogResult.OK を、
キャンセルなら DialogResult.Cancel を設定しています。

ShowDialog で表示したフォームは、DialogResult プロパティを設定すること
で、フォームは自動で閉じますので、 Close メソッドを呼ぶ必要はありません。

※ このフォームは、ShowDialog() で呼び出されることを前提としています。

┌─┬─────────────────────────┬─┬─┬─┐
│☆│ C#プログラミングレッスン  (ぼぼ週刊）            │＿│□│×│
├─┴─────────────────────────┴─┴─┴─┤
│ Published by Gushwell.                                           │
│ Copyright (C) 2004-2007 Gushwell All rights reserved.            │
│ Microsoft MVP Visual Developer - Visual C#(Apr 2005 - Mar 2008)  │
│-------------------- Gushwell's Page ---------------------------- │
│ 窓際プログラマーの独り言  ：http://blog.livedoor.jp/gushwell/    │
│ 窓際プログラマーの読書三昧：http://gushwell.jugem.jp/            │
│ Gushwell's C# Programing Page：http://gushwell.ifdef.jp/         │
│ C#デザインパターン :                                             │
│  『増補改訂版Java言語で学ぶデザインパターン入門 / 結城 浩(著)』  │
│   のサンプルコードをC#に移植したものを掲載しています。           │
│   移植後のコードの公開は、結城氏の了解を得ています。             │
│   http://blog.livedoor.jp/gushwell/archives/50333227.html        │
└─────────────────────────────────┘
