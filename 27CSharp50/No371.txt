■━ [C#プログラミングレッスン] ━━━━━━━━━━━━━━━ No.371 ━□

「C#5.0編」-- async, awaitによる非同期処理(1)
                                                           by Gushwell
□━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━■


さて、それではいよいよC#5.0のasyncキーワードとawaitキーワードを使っての
非同期処理についてみていきましょう。

■□───────────────────────────────────
■□ asyncキーワードとawaitキーワード

asyncキーワードとawaitキーワードはC#5.0での非同期プログラミングを強力にサ
ポートします。これら二つのキーワードを使用すると、同期メソッドを作成する
のと同じような記述方法で、非同期処理を記述できます。

前回示したTaskクラスを使ったコードをasync awaitキーワードを使って書き換え
てみました。

  private async void button1_Click(object sender, EventArgs e) {
      Task task = Task.Factory.StartNew(DoSomething);
      await task;
      label1.Text = "Finish";
  }

  private void DoSomething() {
      Thread.Sleep(4000);
  }

メソッドにasyncキーワードが付加されている点に注目してください。asyncが付
加されたメソッドは非同期メソッドと呼ばれます。

この非同期メソッドでは、awaitキーワードを使うことができます。awaitキーワ
ードが表れないメソッドでは、asyncキーワードを修飾することはできません。

awaitキーワードに続けて Taskオブジェクトを指定します。
Taskオブジェクトの処理が終了するまで待ち、以降の処理が元のスレッドで実行
されます。
この間、UIがフリーズすることはありません。
このwaitキーワードにより、非同期処理をあたかも同期処理のように書くことが
できます。可読性もあがりますね。

Invokeメソッドも不要になります。これはとてもありがあいですね。
これによりDoSOmethingメソッドから、コントロールへのアクセスコードを除けま
すので、純粋な処理だけを記述できます。
これでDoSOmethingメソッドは、UIから独立したメソッドとなりますから、再利用
性が高まりますし、単体テストもやりやすくなります。

上記コードの button1_Click内はあえて3行で書きましたが、

  await Task.Factory.StartNew(DoSomething);
  label1.Text = "Finish";

と書くのが一般的でしょう。
また、ラムダ式を使えば、以下のように記述することができます。

  private async void button1_Click(object sender, EventArgs e) {
      await Task.Factory.StartNew(() => Thread.Sleep(4000));
      label1.Text = "Finish";
  }

ボタンをクリックしてから"Finish"が表示されるまでの間、UIがブロックされて
いないことをウィンドウを移動するなどして確認してください。


─────────────────────────────────────
『C#プログラミングレッスン』  (ほぼ週刊）
☆皆さまからの感想をお待ちしています。http://gushwell.ifdef.jp/mail.html
─────────────────────────────────────
Published by Gushwell.
Copyright (C) 2013 Gushwell All rights reserved.
Microsoft MVP for Visual C#(Apr 2005 - Mar 2014)

■Gushwell's Page
facebook Page                     : http://www.facebook.com/CSharpLesson
Gushwell's C# Dev Notes           : http://gushwell.ldblog.jp/
Gushwell's C# Programming Page    : http://gushwell.ifdef.jp/
気ままな読書ノート                : http://gwbooks.hatenablog.com/
Twitterアカウント                 : @gushwell
─────────────────────────────────────
