■━ [C#プログラミングレッスン] ━━━━━━━━━━━━━━━ No.250 ━□
  
 「どう書く？org編」-- 漢数字で九九の表
                                                             by Gushwell  
□━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━■


■□───────────────────────────────────
■□ お題： 漢数字で九九の表 (http://ja.doukaku.org/212/)

漢数字で九九の表を作ってください。 
ただし以下の条件をつけます。 

条件 
一．アラビア数字（0～9）禁止。 
    プログラムにも出力結果にもアラビア数字を含んではいけない。（全角・半角
    とも）
二．結果の数字は、「七」とか「一○」(=10)とか「六四」(=64)のような形式とす
    る。
三．九九の結果をそのままプログラム中に書き込んではいけない。 

出力例

　一　　二　　三　　・・・・
　二　　四　　六　　・・・・
　三　　六　　九　　・・・・
　四　　八　一二　　・・・・
　五　一〇　一五　　・・・・
　・
　・


 出題:syatさん


■□───────────────────────────────────
■□ 解答

 using System;
 using System.Linq;

 namespace Sample {
     class Program {
         static string KanString = "一二三四五六七八九";

         static void Main(string[] args) {
             var numseq = KanString.Select((char c, int i) => ++i);
             foreach (var m in numseq) {
                 foreach (var n in numseq) 
                     Console.Write(ToKanji(n * m) + "　");
                 Console.WriteLine();
             }
             Console.ReadLine();
         }

         static string ToKanji(int n) {
             string s = "";
             bool sw = false;
             foreach (var c in n.ToString()) {
                 s += CharToKan(c);
                 sw = !sw;
             }
             return sw ? "　" + s : s;
         }

         static char CharToKan(char c) {
             int n = int.Parse(c.ToString());
             return ("〇" + KanString)[n];
         }
     }
 }


■□───────────────────────────────────
■□ 解説

 int ten = "〇一二三四五六七八九".Length;
 int one = ten / ten;

などと文字列の長さを求めれば、one, two, nine,ten などの変数を宣言できるの
で、「アラビア数字（0～9）禁止」という条件を満たせますが、それでは身も蓋も
ないので、ここは、Length禁止で解いてみました。

■Mainメソッド

数字を取りだすのに、LINQのSelectメソッドを使っています。
Selectメソッドには、要素のインデックスを射影に取り入れることが出来る以下の
構文が用意されています。

 public static IEnumerable<TResult> Select<TSource, TResult>(
     this IEnumerable<TSource> source,
     Func<TSource, int, TResult> selector
 )

これを使い、

  var numseq = KanString.Select((char c, int i) => ++i);

と書くことで、{ 1,2,3,4,5,6,7,8,9 } というシーケンスを取り出すことができま
す。これをforeachでループさせれば、

 for (int n = 1; n < 10; n++) {
    for (int m = 1; m < 10; m++) {
       ...
    }
 }

と同じことが行えます。これで、九九の結果を求められます。


■ToKanjiメソッド

求めた整数 n を漢数字に直しているのが、ToKanjiメソッドです。

例えば、42ならば、'4' と '2' に分解し、KanString文字列から "四", "二" を求
め（CharToKanメソッドが担当）、連結することで "四二" を求めます。

問題は一桁の数のときです。8 ならば、"　八" としなければなりません。どうや
って一桁の数か二桁の数かを判断するかですね。Length使えば簡単ですが、
Lengthは使わないという制約をつけたので、ここでは、sw という bool型の変数を
用意して、ループ内で、

 sw = !sw;

と、処理するたびに反転させています。一桁の場合は1回だけ通りますので、swは
true になり、二桁の場合はfalseとなります。

 return sw ? "　" + s : s;
            
で、sw が true のときは、全角空白を付加し、桁そろえを行っています。


■CharToKanメソッド

CharToKanメソッドは、数字１文字('0'..'9')が入っているchar変数を受け取りま
す。これをインデックスとして、漢数字が入っている文字列から該当する漢字を取
り出しています。

 return ("〇" + KanString)[n];

は、
  string s = "〇一二三四五六七八九";
  return s[n];

と同等の処理をしています。


---
実際のプログラムではこのような制約を設けてプログラミングすることはありませ
んが、こういった制約を設けることで言語への理解を深めることができるのではな
いかと思います。なかなかの良問ですね。


■□───────────────────────────────────
■□ 次回のお題： 疑似並行処理 (http://ja.doukaku.org/215/)

数値（たとえば1から10）と、アルファベット（たとえばAからJまで）を順に出力
する別々のループ処理を並行に実行させ、共通の出力先に出力する極力シンプルな
コードを書いてください。

念のため、実行後、出力先に数値とアルファベットが混ざって出力されている（た
とえば、数値がすべて出力されてからアルファベットが続く…というふうになって
いない）ことを確認してください。混ざってさえいれば、それぞれ１文字ずつ交互
である必要はありませんし、もちろん交互でも構いません。

出力先や出力方法は自由です。標準出力、テキストファイル、コンテナオブジェク
ト（配列、リスト、コレクション）など使いやすいもので構いません。

（お題には"疑似"とありますが、疑似である必要はありません）

─────────────────────────────────────
『C#プログラミングレッスン』  (ぼぼ週刊）                                 
─────────────────────────────────────
 ☆メールマガジンの感想お待ちしています☆                                 
   http://gushwell.ifdef.jp/mail.html                                     

 Published by Gushwell.                                                   
   Copyright (C) 2004-2010 Gushwell All rights reserved.                  
   Microsoft MVP for Visual C#(Apr 2005 - Mar 2011)                       
                                                                          
 <<■ Gushwell's Page ■>>                                                
 窓際プログラマ─の独り言        : http://gushwell.ldblog.jp/             
 Gushwellの読書ノート      : http://gushwell.jugem.jp/              
 Gushwell's F# Programming Diary : http://techbank.jp/gushwell/           
 Gushwell's C# Programming Page  : http://gushwell.ifdef.jp/              
   C#デザインパタ―ン : http://gushwell.ifdef.jp/dp/csdpindex.html        
                                                                          
 <<■ コミュニティtechbank.jp (http://techbank.jp/Community/) ■>>        
 Gushwellが参加している技術系コミュニティです。                           
 マイクロソフト系テクノロジー＆製品に特化したコミュニティです。Webサイトで
 は、VB、C#、VC++、SQL Server, BizTalk Server などの技術情報を公開していま
 す。皆さんの参加をお待ちしています。
─────────────────────────────────────