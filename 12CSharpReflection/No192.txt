┏━┳━━━━━━━━━━━━━━━━━━━━━━━━━┳━┳━┳━┓
┃☆┃ C#プログラミングレッスン                         ┃＿┃□┃×┃
┣━┻━━━━━━━━━━━━━━━━━━━━━━━━━┻━┻━┻━┫
┃リフレクション-応用(4) LINQとの組み合わせ                   No.192┃
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

リフレクションの最後は、LINQを使ったリフレクションのサンプルコードを
お見せしたいと思います。

■──────────────────────────────────
■すべての型を抜き出す

与えられたアセンブルに含まれるすべての型を抜き出すコードです。

 string asmName = 
 "System, Version=2.0.0.0, Culture=Neutral, PublicKeyToken=b77a5c561934e089";
 Assembly asm = Assembly.Load(asmName);
 var types = asm.GetTypes();
 foreach (var type in types)
    Console.WriteLine(type.FullName);
    
これは、特に説明の必要もないでしょう。
GetTypesメソッドの戻り値は、Type[]  ですので、foreachでひとつづつ取り
出すことができます。
これが基本形で、ここから、LINQを使ったサンプルコードをいくつかお見せし
ます。

では、次の例。

■──────────────────────────────────
■列挙型を取り出す

 Assembly asm = Assembly.Load(asmName);
 var query = asm.GetTypes()
                .Where(type => type.IsEnum &&
                               type.IsPublic &&
                               type.Namespace == "System");
 foreach (var type in query)
     Console.WriteLine(type.FullName);

これは、System名前空間にある公開されている列挙型を取り出す例です。
Type[]は、IEnumerable<Type>を実装しているので、LINQのメソッドが利用で
きます。


■──────────────────────────────────
■名前空間の名前の一覧を取得する

 Assembly asm = Assembly.Load(asmName);
 var query = asm.GetTypes()
                .Select(type => type.Namespace)
                .Distinct()
                .OrderBy(name => name);
 foreach (var name in query)
     Console.WriteLine(name);

ロードしたアセンブリに定義してある名前空間の名前の一覧を取得しています。
Selectメソッドで、取得した型が所属する名前空間名を取得します。
ただ、これだけだと重複が存在しますので、Distinct()で重複を除去し、その
後に、OrderByでソートしています。


■──────────────────────────────────
■ジェネリッククラス名の一覧を取得する

 Assembly asm = Assembly.Load(asmName);
 var query = asm.GetTypes()
     .Where(type => type.IsPublic &&
                    type.IsGenericType)
     .Select(type => type.FullName);
 foreach (var name in query)
     Console.WriteLine(name);

ロードしたアセンブリに定義されているジェネリッククラス名を抜き出してい
ます。
クラスのフルネームだけを使いたいので、Selectメソッドで、FullName だけ
を取り出すようにしています。


■──────────────────────────────────
■Nameプロパティを持っているpublicクラスの一覧を取得する

 Assembly asm = Assembly.Load(asmName);
 var query = asm.GetTypes()
     .Where(type => type.IsPublic &&
            type.GetProperties().Any(p => p.Name == "Name"));
 foreach (var type in query)
     Console.WriteLine(type.FullName);

Nameプロパティを持っているpublicクラスを抜き出しています。
Whereメソッドの中で、Anyメソッドを使っている点に注目です。
Anyは、どれか一つでも満たせば、trueになる演算子でしたね。
つまり、Whereメソッドの中のラムダ式は、
「そのtypeが、publicで、Nameプロパティを持っている」
ということを宣言的に表現しているわけです。

これを通常のループ文で書くとどうなるかは、皆さんへの課題とします。

=====================================================================

今回を持って「リフレクション編」は終了です。いかがでしたか？
初めてリフレクションを学んだ方は少し難しかったかもしれませんが、
このリフレクションの機能を使いこなせるようになると、プログラミングの
幅がかなり広がると思います。

さて、次回からは、「LINQ to XML編」をお届けします。
2週間ほどお休みをいただきますので、再開は、1月末の予定です。

┌─┬─────────────────────────┬─┬─┬─┐
│☆│ C#プログラミングレッスン  (ぼぼ週刊）            │＿│□│×│
├─┴─────────────────────────┴─┴─┴─┤
│ Published by Gushwell.                                           │
│ Copyright (C) 2004-2009 Gushwell All rights reserved.            │
│ Microsoft MVP - Visual C#(Apr 2005 - Mar 2009)                   │
│-------------------- Gushwell's Page ---------------------------- │
│ 窓際プログラマーの独り言  ：http://blog.livedoor.jp/gushwell/    │
│ 窓際プログラマーの読書三昧：http://gushwell.jugem.jp/            │
│ Gushwell's C# Programing Page：http://gushwell.ifdef.jp/         │
│ C#デザインパターン :                                             │
│  『増補改訂版Java言語で学ぶデザインパターン入門 / 結城 浩(著)』  │
│   のサンプルコードをC#に移植したものを掲載しています。           │
│   移植後のコードの公開は、結城氏の了解を得ています。             │
│   http://gushwell.ifdef.jp/dp/csdpindex.html                     │
└─────────────────────────────────┘
