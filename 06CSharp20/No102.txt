┏━┳━━━━━━━━━━━━━━━━━━━━━━━━━┳━┳━┳━┓
┃☆┃ C#プログラミングレッスン                         ┃＿┃□┃×┃
┣━┻━━━━━━━━━━━━━━━━━━━━━━━━━┻━┻━┻━┫
┃名前空間エイリアス修飾子                                    No.102┃
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛


■──────────────────────────────────
■ 名前空間名の重複の問題

あなたは、.NET Framework1.1 の時代に、以下のようなクラスを作成したとし
ましょう。

  namespace Gushwell.Collections {
      public class LinkedList {
          ...
      }
  }


C#2.0になり、この LinkedList クラスを使って、あなたの同僚が以下のよう
なコードを書いたとします。

  using System;
  using System.Collections.Generic;
  using GushUtils = Gushwell.Collections;

    public class CircularlyList : GushUtils.LinkedList {
        ...
    }

  # C#2.0 になり、System.Collections.Generic にも、LinkedList<T> が
  # 追加されたため、LinkedList だけでは、クラス名があいまいになり、
  # コンパイルが出来なくなったため、
  #
  #   using GushUtils = Gushwell.Collections;
  #
  # を加え、GushUtils.LinkedList を参照できるようにしたというわけ。

ところが、その後、私は、同僚のこのコードを知らずに、

  namespace GushUtils {
     ...
  }

という新たな名前空間を LinkedListと同じアセンブリに追加してしまいまし
た。

この新しいアセンブリを使い、上記CircularlyList クラスのコードをコンパ
イルすると、エラーになりコンパイルできなくなってしまいます。

これは、波線部分の GushUtils という名前があいまいになってしまったため
です。

    public class CircularlyList : GushUtils.LinkedList {
                                  ~~~~~~~~~

■──────────────────────────────────
■ 名前空間エイリアス修飾子

この問題を解決するのが、名前空間エイリアス修飾子 :: です。この :: 修飾
子を使えば、

  GushUtils.LinkedList

の GushUtils という名前が、エイリアスであることを明示できます。

  GushUtils::LinkedList

このように書くことで、Gushwell.Collections.LinkedList を参照することが
可能になります。

なお、この機能は、重複が起きてから、その対処のために使うのではなく、

   using GushUtils = Gushwell.Collections;

のように、エイリアスを使った場合は、必ず、:: で修飾しましょう。という
ことです。
そうすれば、将来にわたり、コードのあいまい性を排除することが出来るので
す。


■──────────────────────────────────
■ 識別子 global

逆に、エイリアスではなく、名前空間を参照させる方法もあります。

 global::Gushwell.Collections.LinkedList

と、global識別子を使うことで、エイリアスではなく、必ず名前空間を参照さ
せることが可能です。


======================================================================

C#プログラミングレッスン [C#2.0編]は、今回で終了です。
まだ、C#2.0で新たに加えられたいくつかの機能は、説明していませんが、使
う頻度はかなり少ないと思われます。興味のある方は、是非ご自身で調べてみ
てください。

  まだ、説明していない新機能
  
    extern エイリアス
    pragma ディレクティブ
    条件付属性クラス
    固定サイズバッファー


┌─┬─────────────────────────┬─┬─┬─┐
│☆│ C#プログラミングレッスン  (ぼぼ週刊）            │＿│□│×│
├─┴─────────────────────────┴─┴─┴─┤
│ Published by Gushwell.                                           │
│ Copyright (C) 2004-2006 Gushwell All rights reserved.            │
│ Microsoft MVP Visual Developer - Visual C#(Apr 2006 - Mar 2007)  │
│-------------------- Gushwell's Page ---------------------------- │
│ 窓際プログラマーの独り言  ：http://blog.livedoor.jp/gushwell/    │
│ 窓際プログラマーの読書三昧：http://gushwell.jugem.jp/            │
│ C#デザインパターン :                                             │
│  『増補改訂版Java言語で学ぶデザインパターン入門 / 結城 浩(著)』  │
│   のサンプルコードをC#に移植したものを掲載しています。           │
│   移植後のコードの公開は、結城氏の了解を得ています。             │
│   http://blog.livedoor.jp/gushwell/archives/50333227.html        │
└─────────────────────────────────┘