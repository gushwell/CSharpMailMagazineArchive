
■━ [C#プログラミングレッスン] ━━━━━━━━━━━━━━━ No.257 ━□
  
 「LINQ to SQL編」-- DataContext
                                                             by Gushwell  
□━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━■

■□───────────────────────────────────
■□ DataContext

DataContext は、データベースからオブジェクトを取得したり、変更を再送信し
たりする際に使用するクラスで、LINQ to SQLの最も中心となるクラスです。

Visual Studio 2008のO/Rデザイナー画面で、「LINQ to SQLエンティティクラス」
を作成すると、必ず、DataContextから派生したカスタムクラスのコードが作成さ
れます。
データベースにアクセスするには、次のように、この派生DataContextクラスのイ
ンスタンスを生成し、データベースにアクセスする準備をします。

 var db = new NorthwindDataContext();

Northwind.designer.csのソースコードの中の、NorthwindDataContextクラスを
見てみると、そのコンストラクタに、

  public NorthwindDataContext() : 
          base(global::SampleApp.Properties.Settings.Default.
                                NORTHWNDConnectionString, mappingSource)
  {
      OnCreated();
  }

※都合により途中で改行しています。

のような記述があります。
ADO.NET2.0と同様に、Properties.Settings.Default でアクセスできる接続文字列
を使い、データベースに接続しているわけです。

通常は、App.Configの connectionStringsで指定した接続文字列が使われますが、
このApp.Configが無い場合には、ソースに埋め込まれた接続文字列が使われます。
なんかややこしい作りです。

※ ソースに埋め込まれる接続文字列は、開発環境での接続文字列なので注意が必
   要です。


第2引数のmappingSourceは、データソースとエンティティクラスのマッピングのた
めに利用されるものですが、LINQ to SQLを利用する立場からは、これを使うこと
はありません。

なお、

 string constr = "....";
 var db = new NorthwindDataContext(constr);

と、接続文字列を指定出来るコンストラクタも用意されているので、デフォルトの
接続文字列以外を利用することもできます。
これは、ADO.NET2.0より、使いやすくなっていますね。


─────────────────────────────────────
『C#プログラミングレッスン』  (ぼぼ週刊）                                 
 ☆皆さまからの感想をお待ちしています。http://gushwell.ifdef.jp/mail.html 
─────────────────────────────────────
 Published by Gushwell.                                                   
   Copyright (C) 2004-2010 Gushwell All rights reserved.                  
   Microsoft MVP for Visual C#(Apr 2005 - Mar 2011)                       
                                                                          
 ■Gushwell's Page                                                        
 窓際プログラマ─の独り言        : http://gushwell.ldblog.jp/             
 Gushwell's C# Programming Page  : http://gushwell.ifdef.jp/              
 Gushwell's F# Programming Diary : http://techbank.jp/gushwell/           
 Gushwellの読書ノート            : http://gushwell.jugem.jp/              
                                                                          
 ■コミュニティtechbank.jp (http://techbank.jp/Community/blogs/)          
 Gushwellが参加している技術系コミュニティです。                           
 有志メンバーによるBlogでの技術情報発信も行っています。
─────────────────────────────────────
