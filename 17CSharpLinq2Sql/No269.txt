
■━ [C#プログラミングレッスン] ━━━━━━━━━━━━━━━ No.269 ━□
  
 「LINQ to SQL編」-- リレーションのある更新(1)
                                                             by Gushwell  
□━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━■

前々回、前回で、データベースの更新についの基本を説明しましたが、実際に扱う
テーブル間にはリレーションが張らていることが多いと思います。今回は、リレー
ションが張られているテーブルについて見ていきます。


■□───────────────────────────────────
■□ リレーションのある行の挿入

Productテーブルに新しい行を挿入するには、外部キーである CategoryIdを設定
する必要があります。LINQ to SQLにおいても、これは同じです。
Productsテーブルに行を挿入するコードを示します。

 using (var db = new NorthwindDataContext()) {
     Product product = new Product {
         ProductName = "Sample",
         CategoryID = 1,
         UnitPrice = 10,
     };
     db.Products.InsertOnSubmit(product);
     db.SubmitChanges();
     Console.WriteLine(product.ProductID);
 }


前回示した挿入のコードとの違いはほとんどありません。
ProductIDの値は、select のクエリを明示的に書かなくても、参照出来ています。
さらに、興味深いのは、SubmitChanges()の後に、product経由で、関連する
Category情報にアクセスすることができるということです。

   Console.WriteLine(product.Category.CategoryName);

という行を最後の行に追加してみてください。
明示的にCategoryテーブルにアクセスすることなしに、追加したばかりのproduct
経由でCategoryの情報を取得できるのが確認できます。
しつこいようですが、Productのデータを挿入しただけで、どこにもCategoryのデ
ータを取得するコードは書いていません。これって何気なく凄い機能だと思いませ
んか？

なお、この状態でCategoryIDが'1'の行をCategoryテーブルから削除することはで
きません。CategoryIDが'1'に関連したProductを先に削除する必要があります。
これは、LINQ to SQLだからっていうことではないので、どのDBアクセス技術を
使っていても同じですね。

先ほどと似たようなコードですが、Category側からも Productにアクセスできる
例を示しましょう。

 using (var db = new NorthwindDataContext()) {
     Category cat = (from x in db.Categories
                     where x.CategoryName == "Seafood"
                     select x).First();
     Product product = new Product() {
         ProductName = "Sample",
         CategoryID = cat.CategoryID
     };
     db.Products.InsertOnSubmit(product);
     db.SubmitChanges();
     // Category側から、今追加したProductも含め取得できる。
     foreach (var obj in cat.Products) {
         Console.WriteLine(obj.ProductName);
     }
 }

まず、条件に一致するCategoryを一つ取り出し、catに代入します。次に、
Productオブジェクトを生成します。このとき、CategoryIDには、先ほど取りだし
た CategoryのCategoryIDを設定します。
これで、InsertOnSubmit()で、Product行を挿入しています。
SubmitChanges()で、DBを更新後、最初に取り出した cat経由で、そのカテゴリに
属するProductを表示しています。

結果は、

Ikura
Konbu
Carnarvon Tigers
Nord-Ost Matjeshering
Inlagd Sill
Gravad lax
Boston Crab Meat
Jack's New England Clam Chowder
Rogede sild
Spegesild
Escargots de Bourgogne
Rod Kaviar
Sample              <-- ココ

となり、確かに追加したSampleを取得できています。

コード上では、ProductのCategoryIDに値を設定し、Insertしているだけですが、
Insertする前に読み込んであるCategoryオブジェクト(cat)から、Productsプロパ
ティを参照すると、InsertしたProductを取り出すことができます。
なお、コードからはメモリ内のアクセスのように見えますが、実際には、内部で
SELECT文が発行されていることに注意してください。


─────────────────────────────────────
『C#プログラミングレッスン』  (ぼぼ週刊）                                 
 ☆皆さまからの感想をお待ちしています。http://gushwell.ifdef.jp/mail.html 
─────────────────────────────────────
 Published by Gushwell.                                                   
   Copyright (C) 2004-2010 Gushwell All rights reserved.                  
   Microsoft MVP for Visual C#(Apr 2005 - Mar 2011)                       
                                                                          
 ■Gushwell's Page                                                        
 窓際プログラマ─の独り言 - C#の話題を中心に: http://gushwell.ldblog.jp/  
 Gushwell's C# Programming Page             : http://gushwell.ifdef.jp/   
 Gushwell's F# Programming Diary            : http://techbank.jp/gushwell/
 Gushwellの読書ノート                       : http://gushwell.jugem.jp/   
                                                                          
 ■コミュニティtechbank.jp (http://techbank.jp/)                          
 Gushwellが参加している技術系コミュニティです。                           
 有志メンバーによるBlogでの技術情報発信も行っています。                   
─────────────────────────────────────
