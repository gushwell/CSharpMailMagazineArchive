■━ [C#プログラミングレッスン] ━━━━━━━━━━━━━━━ No.323 ━□

「レシピ編」-- 正規表現を使った各種操作(1)
                                                           by Gushwell  
□━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━■

「C#プログラミングレッスン」のfacebook Page にぜひ「いいね」を！
http://www.facebook.com/CSharpLesson

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

今回から、正規表現を扱うRegexクラスを使った各種文字列操作について説明します。

今日のコード

1. 正規表現を使って文字列内から検索するには
2. 指定した部分文字列が先頭から始まっているかを調べるには
3. 指定した部分文字列で、文字列が終わっているかを調べるには
4. 対象文字列があるパターンに完全一致しているかを調べるには

■□───────────────────────────────────
■□ 正規表現を使って文字列内から検索するには

Regexを使い、文字列内から指定パターンの文字列を検索するコードを示します。

string s1 = "Visual Studio 2010は、.NET Framework 4 に対応したMicrosoft" + 
            "社の開発環境です。";
Regex regex = new Regex(@"(Microsoft|microsoft)");
Match m = regex.Match(s1);
if (m.Success)
    Console.WriteLine("{0} {1}", m.Index, m.Value);


Match.Indexは、一致した位置を、Match.Valueは一致した文字列を示しています。
結果は、

42 Microsoft

と表示されます。なお、Regexオブジェクトの生成の部分は、以下のようにも
書けます。

Regex regex = new Regex(@"[Mm]icrosoft");


■□───────────────────────────────────
■□ 指定した部分文字列が先頭から始まっているかを調べるには

正規表現の ^ 記号は、行頭を表すメタ文字ですので、以下のようなコードで
先頭で一致するかどうかを調べられます。。

string s1 = "Visual Studio 2010は、.NET Framework 4 に対応したMicrosoft" + 
            "社の開発環境です。";
Regex regex = new Regex(@"^Visual");
Match m = regex.Match(s1);
if (m.Success)
    Console.WriteLine("{0} {1}", m.Index, m.Value);

この例では、Successプロパティは、trueを返しますので、

0 Visual 

が表示されます。


■□───────────────────────────────────
■□ 指定した部分文字列で、文字列が終わっているかを調べるには

$記号は、行末を示すメタ文字ですので、以下のようなコードで、"ます。" で
文字列が終わっているかを調べることができます。

string s1 = "Visual Studio 2010は、.NET Framework 4 に対応したMicrosoft" +
"社の開発環境です。";
Regex regex = new Regex(@"です。$");
Match m = regex.Match(s1);
if (m.Success)
    Console.WriteLine("{0} {1}", m.Index, m.Value);


■□───────────────────────────────────
■□ 対象文字列があるパターンに完全一致しているかを調べるには

まずは、以下のコードを見てください。

Regex regex = new Regex(@"Windows");
Match m = regex.Match("Microsoft Windows");
Console.WriteLine(m.Success);
Match m2 = regex.Match("Windows Phone");
Console.WriteLine(m2.Success);

m.Success, m2.Success ともに True が表示ます。検索対象文字列が"Windows"の時
だけ、つまり、完全一致したときだけ m.Successがtrueになるようにしたい場合に
は、前述の行頭、行末を示すメタ文字を使います。

例えば、数値文字列かを調べるには、以下のように記述します。

string[] strs = { 
                    "12345",
                    "-12345.6",
                    "+0",
                    "0.123",
                    "+432.00",
                    ".97830",
                    "1234.5.6",
                    "123-56",
                    "-+432.00",
                    "+-432.00",
                    "-.97830",
                    " 123",
                    "\\123",
                    "123 ",
                    "-as123",
                    "+123.34d",
                };
Regex regex = new Regex(@"^[-+]?(\d+)(\.\d+)?$");

foreach (var s in strs) {
    Match m = regex.Match(s);
    if (m.Success)
        Console.WriteLine(m.Value);
}

この例では、複数の文字列から、数値文字列だけを取得しています。
なお、ここでは、.001 のような表現は認めていません。
結果は、

12345
-12345.6
+0
0.123
+432.00

となります。


─────────────────────────────────────
『C#プログラミングレッスン』  (ほぼ週刊）                                 
☆皆さまからの感想をお待ちしています。http://gushwell.ifdef.jp/mail.html  
─────────────────────────────────────
Published by Gushwell.                                                    
 Copyright (C) 2012 Gushwell All rights reserved.                        
 Microsoft MVP for Visual C#(Apr 2005 - Mar 2012)                        

■Gushwell's Page                                                         
facebook Page                     : http://www.facebook.com/CSharpLesson  
Gushwell's C# Dev Notes           : http://gushwell.ldblog.jp/            
Gushwell's C# Programming Page    : http://gushwell.ifdef.jp/             
Gushwellの読書ノート              : http://gushwell.jugem.jp/             
Twitterアカウント                 : @gushwell                             
─────────────────────────────────────

