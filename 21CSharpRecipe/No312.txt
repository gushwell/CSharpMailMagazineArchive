■━ [C#プログラミングレッスン] ━━━━━━━━━━━━━━━ No.312 ━□

「レシピ編」-- 文字列の操作 (2)
                                                           by Gushwell  
□━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━■

前回に引き続き、文字列を操作するコードをいくつか示します

今日のコード

1.文字列の中の各文字を一文字ずつ操作するには 
2.文字列を文字配列に変換するには
3.文字配列を文字列に変換するには
4.文字列を大文字小文字を区別せずに比較するには
5.文字列の一部を取り出すには
6.文字列の一部を置換するには


■□───────────────────────────────────
■□ 文字列の中の各文字を一文字ずつ操作するには

ここでは、一文字ずつコンソールに出力するコードを３つの方法を示します。

方法１

string s = "123456789";
for (int i = 0; i < s.Length; i++) {
    Console.WriteLine(s[i]);
}

この方法はあまりお勧めできません。できるだけ、その次に示す foreach を利用し
てください。

方法２

string s = "123456789";
foreach (var c in s) {
    Console.WriteLine(c);
}

方法３

string s = "123456789";
s.ToList().ForEach(Console.WriteLine);

いちいち ToList しないといけないのが面倒ですね。ForEachメソッドが、
LINQ to Objectsの標準クエリ演算子にあればいいのにと思います。

MicrosoftのDawnload Centerの以下のページから、
http://www.microsoft.com/download/en/details.aspx?id=27203
Interactive Extensions というライブラリが入手できますが、
このライブラリを使うと、IEnumerable<T>オブジェクトに対して、直接 ForEachメ
ソッドが使えるようになります。stringもIEnumerable<char>ですから、ForEachメ
ソッドが利用できます。
たぶん、自作したForEachメソッドを利用している人も多いのではないかと思います。



■□───────────────────────────────────
■□ 文字列を文字配列に変換するには

時々、文字列を文字配列に変換したい場面に出くわす時があります。
そんな時に使えるのが、ToCharArrayメソッドです。

string s = "C#プログラミング";
char[] chararray = s.ToCharArray();
chararray.ToList().ForEach(c => Console.Write("[{0}]", c));

このコードを実行すると、

[C][#][プ][ロ][グ][ラ][ミ][ン][グ]

という結果が得られます。


■□───────────────────────────────────
■□ 文字配列を文字列に変換するには

今度は、その逆の文字配列を文字列に変換するコードです。
ここでは、変数 chararray が char[] 型で、この中にデータが格納されている
ものとします。

string s = new string(chararray);

変換メソッドを呼び出すのではなく、stringのコンストラクタを利用しています。


■□───────────────────────────────────
■□ 文字列を大文字小文字を区別せずに比較するには

== 演算子の比較では大文字、小文字の区別がされますので、大文字、小文字の区別
をせずに比較するには、string.Compareメソッドを使います。

if (String.Compare(s1, s2, true) == 0)
    Console.WriteLine("等しい");
else
    Console.WriteLine("等しくない");

第３引数をtrueにすることで、大文字小文字の区別なく比較することができます。


■□───────────────────────────────────
■□ 文字列の一部を取り出すには

文字列の一部を位置と長さを指定して取り出すコードを示します。

string source = "The quick brown fox jumps over a lazy dog.";
string target = source.Substring(4, 11);
Console.WriteLine("<{0}>",target);

先頭位置：４、取り出す文字数：１１ で部分文字列を取り出しています。

実行すると、

<quick brown>

が表示されます。


■□───────────────────────────────────
■□ 文字列の一部を置換するには

第１引数で指定した部分文字列を、第２引数で指定した文字列に置き換えるコード
です。

string source = "The quick brown fox jumps over a lazy dog.";
string target = source.Replace("dog", "cat");
Console.WriteLine(target);

これを実行すると、以下の文字列が表示されます。

The quick brown fox jumps over a lazy cat.

Replaceメソッドでは、一致する部分文字列が複数個所ある場合は、すべて新しい部
分文字列に置き換わります。

─────────────────────────────────────
『C#プログラミングレッスン』  (ほぼ週刊）                                 
☆皆さまからの感想をお待ちしています。http://gushwell.ifdef.jp/mail.html  
─────────────────────────────────────
Published by Gushwell.                                                    
 Copyright (C) 2011 Gushwell All rights reserved.                        
 Microsoft MVP for Visual C#(Apr 2005 - Mar 2012)                        

■Gushwell's Page                                                         
Gushwell's C# Dev Notes           : http://gushwell.ldblog.jp/            
Gushwell's C# Programming Page    : http://gushwell.ifdef.jp/             
Gushwellの読書ノート              : http://gushwell.jugem.jp/             
─────────────────────────────────────
