■━ [C#プログラミングレッスン] ━━━━━━━━━━━━━━━ No.366 ━□

「HTTPクライアント編」-- Bing Web Search API
                                                           by Gushwell  
□━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━■

購読者の皆さん、おはようございます。
今回は、Bing Web Search API を利用する例です。


■□───────────────────────────────────
■□ アカウントキーの取得

Bing APIを利用するんは、アカウントキーを取得する必要があります。
以下のその手順を示します。なお、アカウントキーを取得するには、Microsoftア
カウントが必要になりますが、ここではそのアカウント取得方法は割愛します。

(1) Bing Developperのサイト（http://www.bing.com/developers/) にアクセス
    します、
(2) [検索API]の今すぐ開始をクリックします。
(3) Bing Search APIのページが開きますので、ページ下のほうにある 月額 \0.00
    の[サインアップ]をクリックします。
(4) 登録フォームが開きますので、必要事項を記入し、[続行]をクリックします。
(5) Microsoft Windows Azure Marketplace 契約 の画面が表示されますので、
    [使用条件に同意します]にチェックをし、[登録]をクリックします。
(6) [前述の公開元のオファー条件とプライバシー ポリシーを読み、内容に同意
    しました]にチェックをし、[サインアップ]をクリックします。
(7) 画面上部の[マイアカウント]をクリックし、アカウントページに移動します。
(8) プライマリーアカウントキーと、顧客IDが確認できます。
    このプライマリーアカウントキーをAPI利用の認証で利用します。


■□───────────────────────────────────
■□ Bing Web Search APIを利用する

Bing Web Search API の 形式は、以下の通りです。

 https://api.datamarket.azure.com/Bing/Search/Web?$format=<FORMAT>&$top=<COUNT>&Query=%27<KEYWORD>%27 

<FORMAT> : json, xml, atom のいずれか
<TOP>    : 取得する検索結果の数
<KEYWORD> : 検索ワード


以下、そのサンプルコードとなります。前回と同様、DynamicJsonを利用しています。

using System;
using System.Net;
using System.Text;
using System.Web;
using Codeplex.Data;

namespace BingSearch {
    class Program {
        static void Main(string[] args) {
            dynamic json = SearchWebByBing("Windows8",3);
            foreach (var x in json.d.results) {
                Console.WriteLine("Title={0}",x.Title);
                Console.WriteLine("Url={0}",x.Url);
                Console.WriteLine("Description={0}",x.Description);
                Console.WriteLine("----------");
            }
            Console.ReadLine();
        }

        private static dynamic SearchWebByBing(string keyword,int top) {
            WebClient wc = new WebClient();
            wc.Headers.Add("Content-type", "application/json; charset=UTF-8");   // ★
            string accountKey = "+XV1HPqRK0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx";  // ▼
            wc.Credentials = new NetworkCredential(accountKey, accountKey);     // ☆
            string param = string.Format("$format={0}&$top={1}&Query={2}", 
                 "json", top, HttpUtility.UrlEncode("'" + keyword + "'"));
            string result = wc.DownloadString(
                 @"https://api.datamarket.azure.com/Bing/Search/Web?" + param);
            return DynamicJson.Parse(result);
        }
    }
}


上記プログラムをビルドするには、System.Net.Httpアセンブリ、System.Runtime.
SerializationアセンブリとSystem. Webアセンブリを参照設定に追加する必要があ
ります。

簡単にコードの説明をしますね。
DownloadStringメソッドを使い、結果を文字列で受け取っています。
その代り、★の行で、Content-Type で、charset-UTF-8 を設定し、返される文字
列がUTF-8であることを明示しています。これがないと、文字化けしてしまいます。
アカウントキーは認証で利用しますが、それが ☆の行です。
▼の行では、WebClient.Credentialsプロパティに NetworkCredentialオブジェクト
を設定し、パスワードに基づく認証を行っています。方式に資格情報を提供します
Bing APIでは、ユーザー名とパスワード共に、アカウントキーを指定します。
前述の手順で取得したアカウントキーをここで指定してください。

以下結果です。

 Title=Windows 8 を体験する - Microsoft Windows
 Url=http://windows.microsoft.com/ja-JP/windows-8/meet
 Description=Windows 8 と Windows RT をご紹介します。Windows 8、タッチベース Wind
 ows 8 PC、Windows ストアのアプリ、スタート画面やライブ タイルなどの新機能をぜひ
 ご体験ください。 ... Windows 8 で はじめましょう より ...
 ----------
 Title=Microsoft Windows 8 - Wikipedia
 Url=http://ja.wikipedia.org/wiki/Microsoft_Windows_8
 Description=Windows 8 （ウィンドウズ エイト）は、 Windows 7 の後継として開発され
 た パソコン および タブレット 端末用 オペレーティングシステム （OS）である。 開
 発コードネームは「8」で、そこから変更されることはなく、そのまま正式名称となった
 ...
 ----------
 Title=Windows8jp [ウィンドウズ8専門サイト]
 Url=http://windows8.jp/
 Description=Windows 8でWindows XPのときに使っていたアプリケーションを動かすには
 （手動の互換性設定） Acer Iconia Tab W510 vs Microsoft Surface RT 起動時間対決 W
 indows8 上級マニュアル 上巻 Panasonic レッツノートAX2 ...

─────────────────────────────────────
『C#プログラミングレッスン』  (ほぼ週刊）                                 
☆皆さまからの感想をお待ちしています。http://gushwell.ifdef.jp/mail.html  
─────────────────────────────────────
Published by Gushwell.                                                    
Copyright (C) 2013 Gushwell All rights reserved.                          
Microsoft MVP for Visual C#(Apr 2005 - Mar 2014)                          

■Gushwell's Page                                                         
facebook Page                     : http://www.facebook.com/CSharpLesson  
Gushwell's C# Dev Notes           : http://gushwell.ldblog.jp/            
Gushwell's C# Programming Page    : http://gushwell.ifdef.jp/             
Gushwellの読書ノート              : http://gushwell.jugem.jp/             
Twitterアカウント                 : @gushwell                             
─────────────────────────────────────
