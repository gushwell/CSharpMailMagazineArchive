■━ [C#プログラミングレッスン] ━━━━━━━━━━━━━━━ No.385 ━□

「アルゴリズム編」-- ビット操作(2)
                                                           by Gushwell
□━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━■

おはようございます。
今回もビット操作に関する問題です。

■□───────────────────────────────────
■□ 問題 （ビット操作）

ある整数AからBに変換するのに必要なビット数を決定する関数を書いてください。
例
入力：31, 14
出力 : 2

  出展：『世界で闘うプログラミング力を鍛える150問』
  http://www.amazon.co.jp/exec/obidos/ASIN/4839942390/gaius-22/



■□───────────────────────────────────
■□ プログラムを書くための準備

具体例で考えてみましょう。

31 と 14をビット列で表すと、

 31: 000000000011111
 14: 000000000001110

です。変更するところを 1で表すと
 　　000000000010001
ですね。

では、31と46ではどうでしょうか？

 31 : 000000000011111
 46 : 000000000101110
 変更 000000000110001

となります。
この最後の行の1の数をカウントすれば、変更するビットの数がわかります。

そうなると、どうやって、000000000010001や000000000110001 というビット列を求
めるかが問題になってきます。

再度、上の例を整理してみると以下のルールがあることがわかります。
変更前、変更後で同じビットならば、0
変更前、変更後で異なるビットならば、1 ということです。

　　1 1  -> 0
    1 0  -> 1
    0 1  -> 1
    0 0  -> 0

そうです。これは排他的論理輪にほかなりません。

つまり、排他的論理をを求め、そのなかにいくつビットがたっているかを求めれば
よいのです。

1 が立っている数をカウントする方法は、ここでは以下のようなやり方でできそう
です。

 1. 値が 0 で無い間は、2,3を繰り返す
 2. 0 ビット目が 1 ならば、カウントアップ
 3. 値を右に１ビット分シフト



■□───────────────────────────────────
■□ 問題を解く

ここまでくれば、コードを書くのは難しくありませんね。
そのコードを以下に示します。戻り値が求めたいビット数になります。

  static int GetConvertCount(int a, int b) {
      int c = a ^ b;       // 排他的論理輪をとって
      int count = 0;       // 1 をカウントする
      while (c != 0) {
          if ((c & 1) == 1)
              count++;
          c >>= 1;        // c を右にシフトしていくい
      }
      return count;
  }


■□───────────────────────────────────
■□ 確認のコードを書く

GetConvertCount メソッドを使って、(31,14)で動きを確かめてみます。

  static void Main(string[] args) {
      int c = GetConvertCount(31, 14);
      Console.WriteLine(c);
      Console.ReadLine();
  }


実行すると 2 が表示され、正しく動いているようです。
実際には、もっといろいろなパターンで確かめる必要があるとおもいますが、それは
皆さんの課題(?)として残しておきますね(^^;;


■□───────────────────────────────────
■□ 次回の問題 （リンクリスト）

ソートされていない連結リストから、重複する要素を削除するコードを書いてくだ
さい。

発展問題
もし、一時的なバッファが使用できないとすれば、どうやってこの問題を解きます
か？

  出展：『世界で闘うプログラミング力を鍛える150問』
  http://www.amazon.co.jp/exec/obidos/ASIN/4839942390/gaius-22/



─────────────────────────────────────
『C#プログラミングレッスン』  (ほぼ週刊）
☆皆さまからの感想をお待ちしています。http://gushwell.ifdef.jp/mail.html
─────────────────────────────────────
Published by Gushwell.
Copyright (C) 2013 Gushwell All rights reserved.
Microsoft MVP for Visual C#(Apr 2005 - Mar 2014)

■Gushwell's Page
facebook Page                     : http://www.facebook.com/CSharpLesson
Gushwell's C# Dev Notes           : http://gushwell.ldblog.jp/
Gushwell's C# Programming Page    : http://gushwell.ifdef.jp/
気ままな読書ノート                : http://gwbooks.hatenablog.com/
Twitterアカウント                 : @gushwell
─────────────────────────────────────
