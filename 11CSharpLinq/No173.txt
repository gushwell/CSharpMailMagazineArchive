┏━┳━━━━━━━━━━━━━━━━━━━━━━━━━┳━┳━┳━┓
┃☆┃ C#プログラミングレッスン                         ┃＿┃□┃×┃
┣━┻━━━━━━━━━━━━━━━━━━━━━━━━━┻━┻━┻━┫
┃ C#3.0-LINQ 集合演算子                                      No.173┃
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

今回は、いわゆる集合演算子の説明です。

※ サンプルコードに出てくる NorthwindObjects.GetOrders() メソッドは、
   http://gushwell.ifdef.jp/magArchive.html のページ右下からダウンロー
   ドできます。

■──────────────────────────────────
■Distinct演算子

Distinct演算子は、シーケンスから重複する要素を取り除きます。

 var orders = NorthwindObjects.GetOrders();
 var query = orders
             .Where(o => o.OrderDate.Year >= 1988)
             .Select(o => o.CustomerID)
             .OrderBy(id => id)
             .Distinct();
 foreach (var o in query)
     Console.WriteLine(o.ToString());


上記コードは、1988年以降に注文があった顧客IDを抜き出し、昇順に並べ替え
ていますが、最後に Distinct演算子で、重複した顧客IDを取り除いています。


■──────────────────────────────────
■Union演算子

Union演算子は、２つのシーケンスの和集合を作成します。

 var nums1 = new[] { 1, 2, 3, 5, 7, 9 };
 var nums2 = new[] { 10, 8, 6, 5, 4, 2 };
 var query = nums1.Union(nums2)
                  .OrderBy(n => n);
 foreach (var o in query)
     Console.WriteLine(o.ToString());

上記コードの結果は、

1
2
3
4
5
6
7
8
9
10

となります。OrderBy演算子を使っているので昇順に並びますが、Unionだけで
は昇順に並びません。

※これ以降のサンプルコードも OrderBy演算子を使い、昇順に並べ結果を見や
  すくしています。


■──────────────────────────────────
■Intersect 演算子

Intersect 演算子は、2 つのシーケンスの積集合を作成します。

 var nums1 = new[] { 1, 2, 3, 5, 7, 9 };
 var nums2 = new[] { 10, 8, 6, 5, 4, 2 };
 var query = nums1.Intersect(nums2)
                  .OrderBy(n => n);
 foreach (var o in query)
     Console.WriteLine(o.ToString());

の結果は、

 2
 5

となります。


■──────────────────────────────────
■Except 演算子

Except 演算子は、2 つのシーケンスの差集合を作成します。

 var nums1 = new[] { 1, 2, 3, 5, 6, 7, 9, };
 var nums2 = new[] { 10, 8, 7, 6, 4, 2 };
 var query = nums1.Except(nums2)
                  .OrderBy(n => n);
 foreach (var o in query)
     Console.WriteLine(o.ToString());

結果は、

 1
 3
 5
 9

です。

┌─┬─────────────────────────┬─┬─┬─┐
│☆│ C#プログラミングレッスン  (ぼぼ週刊）            │＿│□│×│
├─┴─────────────────────────┴─┴─┴─┤
│ Published by Gushwell.                                           │
│ Copyright (C) 2004-2007 Gushwell All rights reserved.            │
│ Microsoft MVP Visual Developer - Visual C#(Apr 2005 - Mar 2009)  │
│-------------------- Gushwell's Page ---------------------------- │
│ 窓際プログラマーの独り言  ：http://blog.livedoor.jp/gushwell/    │
│ 窓際プログラマーの読書三昧：http://gushwell.jugem.jp/            │
│ Gushwell's C# Programing Page：http://gushwell.ifdef.jp/         │
│ C#デザインパターン :                                             │
│  『増補改訂版Java言語で学ぶデザインパターン入門 / 結城 浩(著)』  │
│   のサンプルコードをC#に移植したものを掲載しています。           │
│   移植後のコードの公開は、結城氏の了解を得ています。             │
│   http://blog.livedoor.jp/gushwell/archives/50333227.html        │
└─────────────────────────────────┘