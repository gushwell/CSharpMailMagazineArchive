┏━┳━━━━━━━━━━━━━━━━━━━━━━━━━┳━┳━┳━┓
┃☆┃ C#プログラミングレッスン                         ┃＿┃□┃×┃
┣━┻━━━━━━━━━━━━━━━━━━━━━━━━━┻━┻━┻━┫
┃ C#3.0-LINQ事始め                                           No.163┃
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

LINQ to Objectsの例をもう少し見てみましょう。

■──────────────────────────────────
■ 絞込みの例

長さが６文字以上の文字列だけを抜き出すコードです。

 using System;
 using System.Collections.Generic;
 using System.Linq;
 ...

 string[] names = { 
       "Microsoft", "Apple", "IBM", "Google", "HP", "Dell };

 var query = names.Where(s => s.Length >= 6)
                  .Select(s => s);
 foreach (var s in query)
     Console.WriteLine(s);

クエリ式を使えば、拡張メソッド呼び出しの箇所は

 var query = from s in names
             where s.Length >= 6
             select s;

となります。
この結果は、

 Microsoft
 Google

ですね。

なお、拡張メソッドのコードでは、

 var query = names.Where(s => s.Length >= 6);

とSelectメソッドを省略できます。
Whereメソッドの戻り値が、IEnumerable<string>であり、Select(s => s)で、
Whereメソッドで取り出された文字列をそのまま返しているので、わざわざ、
Selectメソッドを呼ぶ必要はありません。

ただし、クエリ式では、selectを省略することはできません。

■──────────────────────────────────
■ 整列の例

今度は、ソートさせてみましょう。
長さが3より長い文字列だけを抜き出し、アルファベット順にソートしていま
す。

 拡張メソッド版
 var query = names.Where(s => s.Length > 3)
                  .OrderBy(s => s)
                  .Select(s => s);

 クエリ式版
 var query = from s in names
             where s.Length > 3
             orderby s
             select s;

結果は、

 Apple
 Dell
 Google
 Microsoft

です。




今までのコードで分かったことは、コレクションを操作するちょっとしたコー
ドならば、ループ処理を必要としないということです。

さらにLINQを勉強してゆくと、標準で用意された拡張メソッドを使うことで、
コレクションを操作するほとんどの処理がループなしで記述できるということ
が分かってくるはずです。

なおい、LINQでは、これらSelect, Where, OrderByなどの拡張メソッドを「ク
エリ演算子」と読んでいます。

┌─┬─────────────────────────┬─┬─┬─┐
│☆│ C#プログラミングレッスン  (ぼぼ週刊）            │＿│□│×│
├─┴─────────────────────────┴─┴─┴─┤
│ Published by Gushwell.                                           │
│ Copyright (C) 2004-2007 Gushwell All rights reserved.            │
│ Microsoft MVP Visual Developer - Visual C#(Apr 2005 - Mar 2009)  │
│-------------------- Gushwell's Page ---------------------------- │
│ 窓際プログラマーの独り言  ：http://blog.livedoor.jp/gushwell/    │
│ 窓際プログラマーの読書三昧：http://gushwell.jugem.jp/            │
│ Gushwell's C# Programing Page：http://gushwell.ifdef.jp/         │
│ C#デザインパターン :                                             │
│  『増補改訂版Java言語で学ぶデザインパターン入門 / 結城 浩(著)』  │
│   のサンプルコードをC#に移植したものを掲載しています。           │
│   移植後のコードの公開は、結城氏の了解を得ています。             │
│   http://blog.livedoor.jp/gushwell/archives/50333227.html        │
└─────────────────────────────────┘