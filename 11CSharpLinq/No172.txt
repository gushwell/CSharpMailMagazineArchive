┏━┳━━━━━━━━━━━━━━━━━━━━━━━━━┳━┳━┳━┓
┃☆┃ C#プログラミングレッスン                         ┃＿┃□┃×┃
┣━┻━━━━━━━━━━━━━━━━━━━━━━━━━┻━┻━┻━┫
┃ C#3.0-LINQ 集計演算子                                      No.172┃
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

今回は、Count, Sumなどの集計演算子について説明します。何をするものなの
かは、名前から明らかですので、サンプルコードとその結果を示すこととしま
す。

■──────────────────────────────────
■Count - カウントする

コード
 // 奇数の個数を求める
 var nums = new[] { 1, 2, 3, 4, 5, 6, 7, 8, 9 };
 var count = nums.Where(n => n % 2 == 1).Count();
 Console.WriteLine(count);

結果
 5

上記コードをクエリ式だけで、書くことはできません。
無理やり書いたとしても、

 var count = (from n in nums
              where n % 2 == 1
              select n).Count();

と、クエリ式の後に、Countメソッドを連結させることになります。どちらを
使うかは、お好みしだいだと思います。他の集計演算子も同様です。

今回は、とても単純な例を載せましたが、これら集計演算子は、GroupJoin や
GroupBy演算子などと共に利用することが多いと思われます。GroupJoin や 
GroupBy演算子の説明のときに、再度登場してもらいます。


■──────────────────────────────────
■Sum - 合計を求める

コード
 // 奇数の合計を求める
 var nums = new[] { 1, 2, 3, 4, 5, 6, 7, 8, 9 };
 var sum = nums.Where(n => n % 2 == 1).Sum();
 Console.WriteLine(sum);

結果
 25


■──────────────────────────────────
■Max - 最大値を求める

コード
 // 奇数の最大値を求める
 var nums = new[] { 5, 7, 2, 10, 6, 9, 2, 3 };
 var max = nums.Where(n => n % 2 == 1).Max();
 Console.WriteLine(max);

結果
 9

■──────────────────────────────────
■Min - 最小値を求める

 // 奇数の最小値を求める
 var nums = new[] { 5, 7, 2, 10, 6, 9, 2, 3 };
 var min = nums.Where(n => n % 2 == 1).Min();
 Console.WriteLine(min);

結果
 3

■──────────────────────────────────
■Average - 平均値を求める

コード
 // 奇数の平均値を求める
 var nums = new[] { 5, 7, 2, 10, 6, 9, 2, 3 };
 var avg = nums.Where(n => n % 2 == 1).Average();
 Console.WriteLine(avg);

結果
 6



もう、自分で最大値を求めるコードや、平均を求めるコードをループを使って
書く必要はありません。LINQを使えば、「どうやるか」ではなく、「何をやる
のか」を書くだけです。


┌─┬─────────────────────────┬─┬─┬─┐
│☆│ C#プログラミングレッスン  (ぼぼ週刊）            │＿│□│×│
├─┴─────────────────────────┴─┴─┴─┤
│ Published by Gushwell.                                           │
│ Copyright (C) 2004-2007 Gushwell All rights reserved.            │
│ Microsoft MVP Visual Developer - Visual C#(Apr 2005 - Mar 2009)  │
│-------------------- Gushwell's Page ---------------------------- │
│ 窓際プログラマーの独り言  ：http://blog.livedoor.jp/gushwell/    │
│ 窓際プログラマーの読書三昧：http://gushwell.jugem.jp/            │
│ Gushwell's C# Programing Page：http://gushwell.ifdef.jp/         │
│ C#デザインパターン :                                             │
│  『増補改訂版Java言語で学ぶデザインパターン入門 / 結城 浩(著)』  │
│   のサンプルコードをC#に移植したものを掲載しています。           │
│   移植後のコードの公開は、結城氏の了解を得ています。             │
│   http://blog.livedoor.jp/gushwell/archives/50333227.html        │
└─────────────────────────────────┘