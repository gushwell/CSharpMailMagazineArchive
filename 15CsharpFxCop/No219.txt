■━ [C#プログラミングレッスン] ━━━━━━━━━━━━━ No.219 ━□
  
 「FxCopに学ぶ編」 -- CA1021:Avoid out parameters
                                                         by Gushwell  
□━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━■

■□─────────────────────────────────
■□ FxCopとは

Visual Studuio Team Systemに含まれる静的コード分析ツールは、ソースコー
ド（正確には、ビルド後のマネージ コード）を解析し、.NETのガイドライン
に準拠しているかをチェックするツールです。コンパイルエラーでは無いけれ
ど、好ましくないコードを指摘してくれるというわけですね。
このツールが出す日本語のメッセージが分かりにくいという欠点はありますが、
その欠点を補って余りある有用なツールだと思います。
なお、英語版になってしまいますが、FxCopとして単体でも提供されています
ので、Team Systemをご利用でない方は、単体のFxCopを利用すると良いと思い
ます。

最新版は、ここからダウンロードできます。
http://code.msdn.microsoft.com/codeanalysis

このツールには、.NET Framework デザイン ガイドラインに従っているか、パ
フォーマンスで問題になりそうなコードはないか、適切な名前付けがされてい
るか、などをチェックしてくれます。数えたことは無いのですが、たぶん、１
５０以上のルールがあり、コードの品質を向上させる上で欠かせないツールと
なっています。

今回から、この静的コード分析ツール（以降、FxCopと表記）のルールの中か
ら、いくつかをピックアップし、その解説を行っていきたいと思います。たぶ
ん、「デザイン上の警告」で定義されているルールが中心になると思います。
これにより、良いクラスデザインとは何かを考えるヒントになればと思います。
まあ、「良いクラスデザイン」と言っても、プログラムでチェックできるルー
ルなので、そんな大それたものではないですが...


■□─────────────────────────────────
■□ FxCopに学ぶ編の発行方針

この『FxCopに学ぶ編』は、「１回にひとつのルール」という原則で発行して
いきたいと思いますので、解説が短めの回が多くなると思います。もしかした
ら、「えっ？これだけ！」という回もあるかと思いますが、そこは大目に見て
やってください。

ルールの一覧から目にとまったもの（できるだけ単純なルール）から取り上げ
るつもりですので、取り上げるルールは順不同となります。

また、『FxCopに学ぶ編』の発行回数も今のところ不明です。全てのルールを
取り上げるのは、僕のスキル的にも時間的にも無理なので、たぶん、10～20
の間かなと思います。

では、本題に入りましょう。今回は、「CA1021: Avoid out parameters」の
説明です。


■□─────────────────────────────────
■□ CA1021: Avoid out parameters

以下のコードの問題点はどこにあるでしょうか?

 public class OutParamSample {
     public int Id { get; set; }
     public void Create(out MyClass obj) {
         obj = new MyClass {
             Id = Id,
             name = "hogehoge"
         };
     }
 }


このコードの問題点は、メソッドに out パラメータが含まれている点です。
呼び出し側のコードを見てみましょう。

  OutParamSample sample = new OutParamSample();
  MyClass obj;
  sample.Create(out obj);
  Console.WriteLine(obj.name);

このコードは不自然な感じがしないでしょうか。一見、objが未初期化のまま
使用されているように見えます。実際には、Createの中で初期化しているので
すが、outパラメータがかろうじてそれを伝えているのみです。
outパラメータがデータの流れを追いにくくしています。

引数にoutパラメータを含めずに、以下のように書けた方が読みやすくなるの
は、誰もが認めるところだと思います。

  OutParamSample sample = new OutParamSample();
  MyClass obj = sample.Create(obj);
  Console.WriteLine(obj.name);

outパラメータを使うのは極力避けなければなりません。
outパラメータを使って、値を返すのならば、それを戻り値として返すように
してください。
以下、改善したコードを載せます。

 public class OutParamSample {
     public int Id { get; set; }
     public MyClass Create() {
         MyClass obj = new MyClass {
             Id = Id,
             name = "hogehoge"
         };
         return obj;
     }
 }


■ 参照MSDNページ

out パラメータを使用しないでください 
http://msdn.microsoft.com/ja-jp/library/ms182131.aspx


───────────────────────────────────
『C#プログラミングレッスン』  (ぼぼ週刊）                             
───────────────────────────────────
 Published by Gushwell.                                               
   Copyright (C) 2004-2009 Gushwell All rights reserved.              
   Microsoft MVP - Visual C#(Apr 2005 - Mar 2010)                     

 <<■ Gushwell's Page ■>>
 窓際プログラマ─の独り言  ：http://blog.livedoor.jp/gushwell/        
 窓際プログラマ─の読書三昧：http://gushwell.jugem.jp/                
 Gushwell's F# Programming Diary : http://techbank.jp/gushwell/       
 Gushwell's C# Programming Page  ：http://gushwell.ifdef.jp/          
   C#デザインパタ─ン : http://gushwell.ifdef.jp/dp/csdpindex.html    

 ☆メールマガジンの感想お待ちしています☆                             
   http://gushwell.ifdef.jp/mail.html                                 

 <<■ コミュニティtechbank.jp (http://techbank.jp/) ■>>
 Gushwellが参加している技術系コミュニティです。
 マイクロソフト系テクノロジー＆製品に特化したコミュニティで、Webサイト
 では、VB、C#、VC++、SQL Server, BizTalk Server などの技術情報を公開し
 ています。皆さんの参加をお待ちしています。
 ブロガーさんも募集中です。
───────────────────────────────────
