
■━ [C#プログラミングレッスン] ━━━━━━━━━━━━━━━ No.277 ━□
  
 「C#4.0 編」-- dynamicが使える場面(3)
                                                             by Gushwell  
□━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━■

dynamicが使える場面の3回目です。今回は、リフレクションのメソッド呼び出しで
dynamicで扱う例を説明します。

■□───────────────────────────────────
■□ リフレクションのメソッド呼び出しで利用する

リフレクションのInvokeメソッドを使う代わりに、dynamicを使うと、簡単にメソ
ッド呼び出し、 プロパティ参照を行うことができます。
例えば、


  namespace Sample {
      class Hoge {
          public string DoSomething(int n) {
              return (n * n).ToString();
          }
      }
  }


というクラスがあり、リフレクションを使い Hoge.DoSomething メソッドを呼び
出したいとします。
たとえば、こんなコードですね。


  Type type = Type.GetType("Sample.Hoge");
  object obj = Activator.CreateInstance(type);
  MethodInfo mi = type.GetMethod("DoSomething");
  object[] args = new object[] { 2 };
  object result = mi.Invoke(obj, args);
  Console.WriteLine((string)result);


判りやすい、書きやすいとはお世辞にも言えません。
これを  dynamicを使って書き直すと、


  Type type = Type.GetType("Sample.Hoge");
  dynamic obj = (dynamic)Activator.CreateInstance(type);
  string result = obj.DoSomething(2);
  Console.WriteLine(result);


となり、インスタンス生成を除けば、通常のメソッド呼び出しと同じコードが書
けるようになります。
コードも短くなりますし、可読性が向上します。



------------------------

これまで、dynamicが使える場面として、

1.ジェネリックスクラスで算術演算
2.匿名クラスをスコープを超えて扱う
3.リフレクションのメソッド呼び出しで利用する

の３つについて説明してきましたが、もうひとつ「COM APIとの相互運用を行いたい
場合」があります。これについては、次回「Office 相互運用」で説明します。


─────────────────────────────────────
『C#プログラミングレッスン』  (ぼぼ週刊）                                 
 ☆皆さまからの感想をお待ちしています。http://gushwell.ifdef.jp/mail.html 
─────────────────────────────────────
 Published by Gushwell.                                                   
   Copyright (C) 2004-2010 Gushwell All rights reserved.                  
   Microsoft MVP for Visual C#(Apr 2005 - Mar 2011)                       
                                                                          
 ■Gushwell's Page                                                        
 窓際プログラマ─の独り言 - C#の話題を中心に: http://gushwell.ldblog.jp/  
 Gushwell's C# Programming Page             : http://gushwell.ifdef.jp/   
 Gushwell's F# Programming Diary            : http://techbank.jp/gushwell/
 Gushwellの読書ノート                       : http://gushwell.jugem.jp/   
                                                                          
 ■コミュニティtechbank.jp (http://techbank.jp/)                          
 Gushwellが参加している技術系コミュニティです。                           
 有志メンバーによるBlogでの技術情報発信も行っています。                   
─────────────────────────────────────
