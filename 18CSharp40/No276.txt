
■━ [C#プログラミングレッスン] ━━━━━━━━━━━━━━━ No.276 ━□
  
 「C#4.0 編」-- dynamicが使える場面(2)
                                                             by Gushwell  
□━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━■

dynamicが使える場面の2回目です。今回は、匿名クラスをdynamicで扱う例を説明
します。


■□───────────────────────────────────
■□ 匿名クラスをスコープを超えて扱う

プログラムを書いていると、あるメソッドで２つ以上の値を返したい場合が時々
出てきます。そんな時は、out指定のパラメータを使うのが常套手段なわけですす
が、僕はこの手法は好きではありません。

かといって、以下のように、クラスの中だけで利用する privateなクラスを定義し、
そのクラスを返すメソッドを定義するのは、ちょっと大げさな気がしてしまいます。
以下に、そのコードを示します。


  private class MyPoint {
      public int X { get; set; }
      public int Y { get; set; }
  }
  ...

  public void Exec() {
      for (int i = 0; i < 10; i++) {
          MyPoint p = GetPoint();
          Console.WriteLine("{0} {1}", p.X, p.Y);
      }
  }

  private MyPoint GetPoint() {
      int X = .... なんらかの処理で x を求める
      int y = .... なんらかの処理で y を求める
      return new MyPoint { X = x, Y = y };
  }

一時的にしか使わないのに、クラスを定義するのは、やはり面倒です。

そこでC#4.0で導入されたdynamicの出番です。
以下にそのサンプルコードです。

  public void Exec() {
      for (int i = 0; i < 10; i++) {
          // 匿名クラスを dynamic として受け取る。
          dynamic p = GetPoint();
          Console.WriteLine("{0} {1}", p.X, p.Y);
      }
  }

  ....

  private dynamic GetPoint() {
      int X = .... なんらかの処理で x を求める
      int y = .... なんらかの処理で y を求める
      // 戻り値が dynamicなので匿名クラスを返せる
      return new { X = x, Y = y };
  }

GetPointメソッドでは、匿名クラスのオブジェクトを返していますが、
この時の戻り値の型をdayamicにしています。
GetPointメソッドの呼び出し側も、dynamicとして受け取れば、X,Yというメンバー
を参照することが可能です。

また、LINQの Select拡張メソッドでは、匿名クラスを返すことが多いですが、上
記手法を利用すれば、この匿名クラスのオブジェクトを、メソッドのスコープを超
えて扱うことが可能です。
ただし、やりすぎには、くれぐれも注意してください。

-------

今回は、ちょっと短めですみません m(_ _)m

─────────────────────────────────────
『C#プログラミングレッスン』  (ぼぼ週刊）                                 
 ☆皆さまからの感想をお待ちしています。http://gushwell.ifdef.jp/mail.html 
─────────────────────────────────────
 Published by Gushwell.                                                   
   Copyright (C) 2004-2010 Gushwell All rights reserved.                  
   Microsoft MVP for Visual C#(Apr 2005 - Mar 2011)                       
                                                                          
 ■Gushwell's Page                                                        
 窓際プログラマ─の独り言 - C#の話題を中心に: http://gushwell.ldblog.jp/  
 Gushwell's C# Programming Page             : http://gushwell.ifdef.jp/   
 Gushwell's F# Programming Diary            : http://techbank.jp/gushwell/
 Gushwellの読書ノート                       : http://gushwell.jugem.jp/   
                                                                          
 ■コミュニティtechbank.jp (http://techbank.jp/)                          
 Gushwellが参加している技術系コミュニティです。                           
 有志メンバーによるBlogでの技術情報発信も行っています。                   
─────────────────────────────────────
